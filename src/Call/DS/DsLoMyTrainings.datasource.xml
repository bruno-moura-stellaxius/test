<DataSource name="DsLoMyTrainings" businessObjectClass="LoMyTrainings" external="true" distinct="false" readonly="false" editableEntity="TrainingCommitment__c" schemaVersion="2.0">
  <Attributes>
    <Attribute name="pKey" table="TrainingCommitment__c" column="Id" /> 
    <Attribute name="startDate" table="TrainingCommitment__c" column="DateFrom__c" />
    <Attribute name="endDate" table="TrainingCommitment__c" column="DateTo__c" />
    <Attribute name="trainingName" table="TrainingCommitment__c" column="Name" />
    <Attribute name="trainingType" table="TrainingCommitment__c" column="TrainingType__c" />
    <Attribute name="brand" table="Product2" column="Name" />
    <Attribute name="productId" table="Product2" column="Id" />
  </Attributes>
  <Entities>
    <Entity name="TrainingCommitment__c" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">

    <Load><![CDATA[

    var clbMetaPKey = "";
    var bpaMainPKey = "";
            
    if(Utils.isDefined(jsonQuery)){
    var newParams = jsonQuery;
              if (Utils.isOldParamsFormat(newParams)){
              newParams = Utils.convertDsParamsOldToNew(newParams);
              }
            }
            if (Utils.isDefined(newParams.clbMetaPKey)){
              clbMetaPKey = Utils.convertForDBParam(newParams.clbMetaPKey, "DomPKey");
            }
            if (Utils.isDefined(newParams.bpaMainPKey)){
              bpaMainPKey = Utils.convertForDBParam(newParams.bpaMainPKey, "DomPKey");
            }

            var sqlParams = {clbMetaPKey,bpaMainPKey};       

    var sqlStmt = " SELECT TrainingCommitment__c.Id as pKey, ";
    sqlStmt += " TrainingCommitment__c.Name as trainingName, ";
    sqlStmt += " TrainingCommitment__c.TrainingType__c as trainingType, ";
    sqlStmt += " TrainingCommitment__c.DateFrom__c as startDate, ";
    sqlStmt += " TrainingCommitment__c.DateTo__c as endDate, ";
    sqlStmt += " CASE ";
    sqlStmt += " WHEN Product2.Criterion_3_Product__c IS NULL OR TRIM(Product2.Criterion_3_Product__c) = '' THEN Product2.Name ";  // If BrandId is NULL, it's a brand
    sqlStmt += " ELSE BrandProduct.Name  ";  // Otherwise, it's a subbrand; get the brand's name
    sqlStmt += " END AS brand, ";
    sqlStmt += " CASE ";
    sqlStmt += " WHEN Product2.Criterion_3_Product__c IS NULL OR TRIM(Product2.Criterion_3_Product__c) = '' THEN Product2.Id ";  // If it's a brand, store its own Id
    sqlStmt += " ELSE Product2.Criterion_3_Product__c ";  // If it's a subbrand, store the associated BrandId
    sqlStmt += " END AS productId ";
    sqlStmt += " FROM TrainingCommitment__c";
    sqlStmt += " INNER JOIN Job_Definition_List__c ON TrainingCommitment__c.Id = Job_Definition_List__c.TrainingCommitment__c ";
    sqlStmt += " INNER JOIN Job_Definition_List_Account__c ON Job_Definition_List__c.Id = Job_Definition_List_Account__c.Job_Definition_List__c ";
    sqlStmt += " INNER JOIN Product2 ON TrainingCommitment__c.BrandSubBrand__c = Product2.Id ";
    sqlStmt += " LEFT JOIN Product2 AS BrandProduct ON Product2.Criterion_3_Product__c = BrandProduct.Id ";
    sqlStmt += " WHERE (1=1) ";
    sqlStmt += " AND #compareAsDate('TrainingCommitment__c.DateFrom__c', 'Date','<=',#TodayAsDate#, 'Date')# ";
    sqlStmt += " AND #compareAsDate('TrainingCommitment__c.DateTo__c', 'Date','>=',#TodayAsDate#, 'Date')# ";
    sqlStmt += " AND Job_Definition_List__c.Visit_Template__c = #clbMetaPKey#";
    sqlStmt += " AND Job_Definition_List_Account__c.Account__c = #bpaMainPKey#";
    sqlStmt += " AND Job_Definition_List__c.Active__c = '1'";

    return Utils.replaceMacrosParam(sqlStmt, sqlParams);

    ]]></Load>
        <Update><![CDATA[ 
    // Intended to be empty     
    return undefined;     
    ]]></Update>
        <Insert><![CDATA[     
    // Intended to be empty     
    return undefined;     

    ]]></Insert>
        <Delete><![CDATA[      
    // Intended to be empty     
    return undefined;     
    ]]></Delete>
  </Database>
</DataSource>