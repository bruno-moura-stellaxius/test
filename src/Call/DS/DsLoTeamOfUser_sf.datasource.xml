<Datasource name="DsLoTeamOfUser" backendSystem="sf" objectClass="LoTeamOfUser" businessObjectClass="LoTeamOfUser" external="true" editableEntity="User" schemaVersion="2.0">
  <Entities>
    <Entity name="User" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">
    <Load><![CDATA[

    var user = ApplicationContext.get('user');

    if (Utils.isDefined(jsonQuery)){
      var newParams = jsonQuery;
      if (Utils.isOldParamsFormat(newParams)){
        newParams = Utils.convertDsParamsOldToNew(newParams);
      }
    }
    // Selected user for calendar
    var currentResponsiblePKey = "";
    if(Utils.isDefined(jsonQuery.currentResponsiblePKey)) {
      currentResponsiblePKey = Utils.convertForDBParam(jsonQuery.currentResponsiblePKey, "DomPKey");
    }
    // Current user
    var currentUserPKey = user.getPKey();
    var sqlStmt = "SELECT ";
    sqlStmt +=" DISTINCT(User.Id) as userPKey, User.name as userName,  ";
    sqlStmt +=" CASE WHEN User.Id=#currentResponsiblePKey# then '1' ELSE '0' END as isSelf, ";
    sqlStmt +="' ' as groupAttribute, ";
    sqlStmt += "CASE WHEN User.Id= #currentResponsiblePKey# THEN 'CheckCircleBlueGrey24' ELSE '' END as currentlySelectedImageId ";

    if (user.hasRole("SalesRep") || user.hasRole("SellOutRep")) {
      sqlStmt +=" FROM Account_Manager__c JOIN User on User__c = User.Id ";
      sqlStmt +=" WHERE Account__c in ";
      sqlStmt +="   (SELECT Account__c FROM Account_Manager__c ";
      sqlStmt +="   WHERE user__c==#currentUserPKey#)";
    } else {
      sqlStmt +=" FROM User WHERE ManagerId = #currentUserPKey#";
    }

    var sqlParams1 = {currentResponsiblePKey, currentUserPKey};

    var sqlStmt1Result = Utils.replaceMacrosParam(sqlStmt, sqlParams1);

    return {sql: sqlStmt1Result.sql, params: sqlStmt1Result.params};
        ]]></Load>
    <Update><![CDATA[
            // Intended to be empty
            return undefined;
                    ]]></Update>
    <Insert><![CDATA[   
                        // Intended to be empty     
            return undefined;           
                    ]]></Insert>
    <Delete><![CDATA[
              // Intended to be empty
              return undefined;  
                    ]]></Delete>
  </Database>
</Datasource>