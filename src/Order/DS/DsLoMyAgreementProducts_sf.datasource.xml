<DataSource name="DsLoMyAgreementProducts" backendSystem="sf" businessObjectClass="LoMyAgreementProducts" external="true" schemaVersion="2.0">
<Entities>
    <Entity name="AgreementProduct__c" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">
    <Load><![CDATA[
    
  var agreementIdsObj =  [] ;
  if (Utils.isDefined(jsonQuery.agreementIds)) {
  	agreementIdsObj = jsonQuery.agreementIds;
  }
  var prdIdsObj = [];
			if (Utils.isDefined(jsonQuery.productIds)) {
				prdIdsObj = jsonQuery.productIds;
			}

var sqlStmt1 = " ";
var sqlStmt2 = " ";  
var sqlStmt3 = " ";  
var sqlStmt4 = " ";  
var sqlStmt5 = " "; 
var sqlParams1 = {};
var sqlParams2 = {};
var sqlParams3 = {};
var sqlParams4 = {};
var sqlParams5 = {};


sqlStmt1 += " SELECT ";
sqlStmt1 += " AgreementProduct.Agreement__c as agreementPKey ";
sqlStmt1 += " ,AgreementProduct.Product__c as agreementProductPKey ";
sqlStmt1 += " ,RecordTypes.Name as recordTypeName ";
sqlStmt1 += " ,AgreementProduct.BaseDiscount__c as baseDiscount ";
sqlStmt1 += " ,AgreementProduct.LayerADiscount__c as layerA ";
sqlStmt1 += " ,AgreementProduct.LayerBDiscount__c as layerB ";
sqlStmt1 += " ,AgreementProduct.LayerCDiscount__c as layerC ";
sqlStmt1 += " ,AgreementProduct.LayerDDiscount__c as layerD ";
sqlStmt1 += " ,AgreementProduct.LayerEDiscount__c as layerE ";
sqlStmt1 += " ,AgreementProduct.LayerFDiscount__c as layerF ";
sqlStmt1 += " FROM AgreementProduct__c as AgreementProduct ";
sqlStmt1 += " INNER JOIN Agreement__c as Agreements ON Agreements.Id = AgreementProduct.Agreement__c ";
sqlStmt1 += " INNER JOIN RecordType as RecordTypes ON Agreements.RecordTypeId = RecordTypes.Id ";
sqlStmt1 += " WHERE AgreementProduct.Agreement__c in ( ";
agreementIdsObj = Utils.getListParams(agreementIdsObj);
sqlStmt2 += " ) AND AgreementProduct.Product__c in ( ";
sqlStmt2 += " SELECT Criterion_3_Product__c FROM Product2 WHERE id in ( ";
prdIdsObj3 = Utils.getListParams(prdIdsObj);
sqlStmt3 += " ) UNION ";
sqlStmt3 += " SELECT Criterion_4_Product__c FROM Product2 WHERE id in ( ";
prdIdsObj4 = Utils.getListParams(prdIdsObj);
sqlStmt4 += " ) UNION ";
sqlStmt4 += " SELECT Id FROM Product2 WHERE id in ( ";
prdIdsObjSku = Utils.getListParams(prdIdsObj);
sqlStmt5 += " ) ) ";
        
	var sqlStmt1Result = Utils.replaceMacrosParam(sqlStmt1, sqlParams1);
	var sqlStmt2Result = Utils.replaceMacrosParam(sqlStmt2, sqlParams2);
  var sqlStmt3Result = Utils.replaceMacrosParam(sqlStmt3, sqlParams3);
  var sqlStmt4Result = Utils.replaceMacrosParam(sqlStmt4, sqlParams4);
  var sqlStmt5Result = Utils.replaceMacrosParam(sqlStmt5, sqlParams5);
			
  var finalSql = sqlStmt1Result.sql + agreementIdsObj.sql + sqlStmt2Result.sql + prdIdsObj3.sql + sqlStmt3Result.sql + prdIdsObj4.sql + sqlStmt4Result.sql + prdIdsObjSku.sql + sqlStmt5Result.sql;
  var finalParams = sqlStmt1Result.params.concat(agreementIdsObj.params).concat(sqlStmt2Result.params).concat(prdIdsObj3.params).concat(sqlStmt3Result.params).concat(prdIdsObj4.params).concat(sqlStmt4Result.params).concat(prdIdsObjSku.params).concat(sqlStmt5Result.params);
	return {sql: finalSql, params: finalParams};

   ]]></Load>
    <Update><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;
   ]]></Update>
    <Insert><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;     
   ]]></Insert>
    <Delete><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;
   ]]></Delete>
  </Database>
</DataSource>