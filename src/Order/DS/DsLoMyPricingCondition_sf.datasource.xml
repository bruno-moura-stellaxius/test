<DataSource name="DsLoMyPricingCondition" backendSystem="sf" businessObjectClass="LoMyPricingCondition" external="true" distinct="true" editableEntity="PricingCondition__c" schemaVersion="2.0">
  <Entities>
    <Entity name="PricingCondition__c" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">
    <Load><![CDATA[
  var pricingTermPKey =  "" ;
  if (Utils.isDefined(jsonQuery.pKey)) {
  	pricingTermPKey = Utils.convertForDBParam(jsonQuery.pKey, "DomPKey");
  }
  var sqlParams = {pricingTermPKey};      
  var sqlStmt = "SELECT DISTINCT PricingCondition__c.Id AS pKey, ";
	sqlStmt += "PricingCondition__c.MaxAuthorizedDiscountPercent__c AS maxDiscountPercent, ";
  sqlStmt += "PricingCondition__c.MinAuthorizedDiscount__c	 AS minDiscountPercent, ";
  sqlStmt += "PricingCondition__c.BehaviorIfHigherDiscount__c AS behaviourIfHigherDiscount, ";
  sqlStmt += "PricingCondition__c.Layer__c AS myLayer, ";
  sqlStmt += "PricingCondition__c.Message__c AS errorMsg ";
	sqlStmt += "FROM PricingCondition__c ";
  sqlStmt += "INNER JOIN PricingTerm__c ON PricingTerm__c.Id = PricingCondition__c.PricingTerm__c ";
  sqlStmt += " WHERE 1=1 "; 
  if (!Utils.isEmptyString(pricingTermPKey)){
        sqlStmt += " AND PricingTerm__c.Id = #pricingTermPKey#";
    }    
  sqlStmt += " AND Layer__c = 'G' Limit 1  ";
  return Utils.replaceMacrosParam(sqlStmt, sqlParams);
   ]]></Load>
    <Update><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;
   ]]></Update>
    <Insert><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;     
   ]]></Insert>
    <Delete><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;
   ]]></Delete>
  </Database>
</DataSource>