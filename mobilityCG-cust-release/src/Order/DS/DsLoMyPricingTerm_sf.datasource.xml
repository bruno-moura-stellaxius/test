<DataSource name="DsLoMyPricingTerm" backendSystem="sf" businessObjectClass="LoMyPricingTerm" external="true" distinct="true" editableEntity="PricingTerm__c" schemaVersion="2.0">
  <Entities>
    <Entity name="PricingTerm__c" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">
    <Load><![CDATA[
  var customerPKey =  "" ;
  if (Utils.isDefined(jsonQuery.customerPKey)) {
  	customerPKey = Utils.convertForDBParam(jsonQuery.customerPKey, "DomPKey");
  }
  var sqlParams = {customerPKey};
        
var sqlStmt = "SELECT DISTINCT PricingTerm__c.Id AS pKey, ";
	sqlStmt += "PricingTerm__c.ShortName__c AS text ";
	sqlStmt += "FROM PricingTerm__c ";
  sqlStmt += " JOIN RecordType ON PricingTerm__c.RecordTypeId = RecordType.Id ";      
  sqlStmt += " LEFT JOIN PricingTermPolicyGroup__c ON PricingTerm__c.Id = PricingTermPolicyGroup__c.PricingTerm__c ";
  sqlStmt += " LEFT JOIN PolicyGroupMember__c ON PolicyGroupMember__c.PolicyGroup__c = PricingTermPolicyGroup__c.PolicyGroup__c ";
  sqlStmt += " LEFT JOIN Flatten_Account_Hierarchy__c FAH ON FAH.Account__c = '#customerPKey#' ";
  sqlStmt += "WHERE PricingTerm__c.Status__c='Active' ";
	sqlStmt += "AND #compareAsDate('PricingTerm__c.DateFrom__c', 'Date','<=',#TodayAsDate#, 'Date')# ";
	sqlStmt += "AND #compareAsDate('PricingTerm__c.DateThru__c', 'Date','>=',#TodayAsDate#, 'Date')# ";
  sqlStmt += " AND RecordType.Name = 'PreSale' ";
  sqlStmt += " AND ( ";
  sqlStmt += "      PricingTerm__c.SalesOrgWide__c = '1' ";
  sqlStmt += "      OR ( ";
  sqlStmt += "          PricingTerm__c.SalesOrgWide__c = '0' AND ";
  sqlStmt += "          ( PolicyGroupMember__c.Account__c = '#customerPKey#' ";
  sqlStmt += "          OR PolicyGroupMember__c.Account__c = FAH.Account_Level_01__c OR PolicyGroupMember__c.Account__c = FAH.Account_Level_02__c ";
  sqlStmt += "          OR PolicyGroupMember__c.Account__c = FAH.Account_Level_03__c OR PolicyGroupMember__c.Account__c = FAH.Account_Level_04__c ";
  sqlStmt += "          OR PolicyGroupMember__c.Account__c = FAH.Account_Level_05__c OR PolicyGroupMember__c.Account__c = FAH.Account_Level_06__c ";
  sqlStmt += "          OR PolicyGroupMember__c.Account__c = FAH.Account_Level_07__c OR PolicyGroupMember__c.Account__c = FAH.Account_Level_08__c ) ";
  sqlStmt += "      )";
  sqlStmt += "  )";
	
	return Utils.replaceMacrosParam(sqlStmt, sqlParams);

   ]]></Load>
    <Update><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;
   ]]></Update>
    <Insert><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;     
   ]]></Insert>
    <Delete><![CDATA[
      // Intended to be empty - Overview list => read only!
      return undefined;
   ]]></Delete>
  </Database>
</DataSource>