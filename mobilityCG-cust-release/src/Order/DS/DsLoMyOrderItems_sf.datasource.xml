<DataSource name="DsLoMyOrderItems" backendSystem="sf" businessObjectClass="LoMyOrderItems" 
  external="true" schemaVersion="2.0">
   <Database platform="SQLite">
    <Load><![CDATA[
    var customerPKey = "";
    var mainPKey = "";
    var pKey = "";
    if(Utils.isDefined(jsonQuery)){
      var newParams = jsonQuery;
      if (Utils.isOldParamsFormat(newParams)){
        newParams = Utils.convertDsParamsOldToNew(newParams);
      }
    }
    /**  customerPKey  */
    if (Utils.isDefined(newParams.customerPKey)){
      customerPKey = Utils.convertForDBParam(newParams.customerPKey, "DomString");
    }
    /**  pKey  */
    if (Utils.isDefined(newParams.pKey)){
      pKey = Utils.convertForDBParam(newParams.pKey, "DomString");
    }
    /**  mainPKey  */
    if (Utils.isDefined(newParams.mainPKey)){
      mainPKey = Utils.convertForDBParam(newParams.mainPKey, "DomText");
    }
   var sqlParams = { customerPKey, mainPKey,pKey};
     sqlStmt = "SELECT *, CASE orderCurrency WHEN 'USD' THEN '$' WHEN 'EUR' THEN 'â‚¬' ";
     sqlStmt += " ELSE orderCurrency END as myCurrencySymbol FROM (";
     sqlStmt += "SELECT Order_Item__c.Id AS pKey, ";
     sqlStmt += "Order_Item__c.Name AS name, ";
     sqlStmt += "Product2.Consumer_Goods_Product_Code__c AS prdName, ";
     sqlStmt += "Product2.Local_Article_Code__c AS myProductLocalArticleCode, ";
     sqlStmt += "Product2.Description_1_#Language#__c AS myProductDescription, ";
     sqlStmt += "CASE ";
     sqlStmt += "  WHEN Product2.Product_Level__c != 'Brand' THEN BrandProduct.Name ";
     sqlStmt += "   ELSE Product2.Name ";
     sqlStmt += " END AS brand, ";
     sqlStmt += "DeliveryLineItem__c.ExpiryDate__c AS expiryDate, ";
     sqlStmt += "Product2.Name AS productName, ";
     sqlStmt += "Product2.SAPProductCode__c AS sapPrdCode, ";
     sqlStmt += "CASE WHEN Product2.Consumer_Goods_Product_Code__c LIKE '#SalesOrg#_%' AND LENGTH(Product2.Consumer_Goods_Product_Code__c) IS 23 THEN SUBSTR(Product2.Consumer_Goods_Product_Code__c, 13, 10) ELSE '1' END AS mySAPCode, ";
     sqlStmt += "DeliveryLineItem__c.BatchNumber__c AS batchNumber, ";
     sqlStmt += "CASE ";
     sqlStmt += "  WHEN strftime('%d-%m-%Y', datetime(RequestedDeliveryDate__c, 'unixepoch')) IS '01-01-1700' THEN ' ' ";
     sqlStmt += "   ELSE strftime('%d-%m-%Y', datetime(RequestedDeliveryDate__c, 'unixepoch')) ";
     sqlStmt += " END AS requestedDeliveryDate, ";
     sqlStmt += "CASE ";
     sqlStmt += "  WHEN strftime('%d-%m-%Y', datetime(ConfirmedDeliveryDate__c, 'unixepoch')) IS '01-01-1700' THEN ' ' ";
     sqlStmt += "   ELSE strftime('%d-%m-%Y', datetime(ConfirmedDeliveryDate__c, 'unixepoch')) ";
     sqlStmt += " END AS confirmedDeliveryDate, ";
     sqlStmt += "DeliveryLineItem__c.OriginalDeliveryQty__c AS requestedQuantity, ";
     sqlStmt += "DeliveryLineItem__c.ActualDeliveryQty__c AS confirmedQuantity, ";
     sqlStmt += "Order_Item__c.Category__c AS itemCategory, ";
     sqlStmt += "Order_Item__c.Base_Price__c AS listPrice, ";
     sqlStmt += "Order_Item__c.Discount__c AS discount, ";
     sqlStmt += "AccountReceivableLineItem__c.Quantity__c AS invoicedQuantity, ";
     sqlStmt += "AccountReceivableLineItem__c.DiscountPercentage__c AS invoicedDiscount, ";
     sqlStmt += "AccountReceivableLineItem__c.NetValue__c AS invoicedProductPrice, "; 
     sqlStmt += "IFNULL (MainOrder.Currency__c, Order__c.Currency__c) as orderCurrency "; 
     sqlStmt += "FROM Order_Item__c ";
     sqlStmt += "LEFT JOIN Product2 ON Product2.Id = Order_Item__c.Product__c ";
     sqlStmt += "LEFT JOIN Product2 AS BrandProduct ON BrandProduct.Id = Product2.Criterion_3_Product__c ";
     sqlStmt += "LEFT JOIN DeliveryLineItem__c ON DeliveryLineItem__c.OrderLineItem__c = Order_Item__c.Id ";
     sqlStmt += "LEFT JOIN Delivery__c ON Delivery__c.Id = DeliveryLineItem__c.Delivery__c ";
     sqlStmt += "LEFT JOIN AccountReceivableLineItem__c ON AccountReceivableLineItem__c.OrderLineItem__c = Order_Item__c.Id ";
     sqlStmt += "JOIN Order__c ON Order__c.Id = Order_Item__c.Order__c "; 
       // Grab the main order, so we can get the currency from it
     sqlStmt += "LEFT OUTER JOIN Order__c as MainOrder on Order__c.MainOrder__c = MainOrder.Id ";
     sqlStmt += "WHERE Order_Item__c.Order__c = '#pKey#' OR Order__c.MainOrder__c = '#pKey#' " ;
  
     sqlStmt += " )";
     return Utils.replaceMacrosParam(sqlStmt, sqlParams);
 
    ]]></Load>
     <Update><![CDATA[
       // Intended to be empty - Overview list => read only!
       return undefined;
    ]]></Update>
     <Insert><![CDATA[
       // Intended to be empty - Overview list => read only!
       return undefined;     
    ]]></Insert>
     <Delete><![CDATA[
       // Intended to be empty - Overview list => read only!
       return undefined;
    ]]></Delete>
   </Database>
 </DataSource>