<DataSource name="DsLuMyAccountRelationship" backendSystem="sf" businessObjectClass="LuMyAccountRelationship" external="true" readOnly="true" editableEntity="Account_Relationship__c" schemaVersion="2.0">
  <Attributes>
    <Attribute name="pKey" table="Account_Relationship__c" column="Id" />
    <Attribute name="name" table="Account_Relationship__c" column="Name" />
    <Attribute name="myPartnerPKey" table="Account_Relationship__c" column="Related_Account__c" />
    <Attribute name="myPartnerName" table="Account" column="Name" />
    <Attribute name="myCustomerPKey" table="Account_Relationship__c" column="Account__c" />
    <Attribute name="myRanking" table="Account_Relationship__c" column="Ranking__c" />
    <Attribute name="myRelationshipType" table="Account_Relationship__c" column="Relationship_Type__c" />
    <Attribute name="myIndustryCode" table="Account" column="TECH_IndustryMobile__c" /> 
  </Attributes>
  <Entities>
    <Entity name="Account_Relationship__c" alias="" idAttribute="Id" />
  </Entities>
  <Database platform="SQLite">
    <Load><![CDATA[
      var customerPKey =  "" ;
      var relationshipType =  "" ;
      var orderCreation = "";
      var notThisCustomer = ""
      if (Utils.isDefined(jsonQuery.customerPKey)) {
        customerPKey = Utils.convertForDBParam(jsonQuery.customerPKey, "DomPKey");
      }
      if (Utils.isDefined(jsonQuery.relationshipType)) {
        relationshipType = Utils.convertForDBParam(jsonQuery.relationshipType, "DomString");
      }
      if (Utils.isDefined(jsonQuery.orderCreation)) {
        orderCreation = Utils.convertForDBParam(jsonQuery.orderCreation, "DomBool");
      }
      if (Utils.isDefined(jsonQuery.notThisCustomer)) {
        notThisCustomer = Utils.convertForDBParam(jsonQuery.notThisCustomer, "DomPKey");
      }

      var sqlParams = {customerPKey,relationshipType,notThisCustomer};
      var sql = "SELECT ";
      sql += "Account_Relationship__c.Id AS pKey, ";
      sql += "Account_Relationship__c.Name AS name, ";
      sql += "Account_Relationship__c.Related_Account__c AS myPartnerPKey, ";
      sql += "Account.Name AS myPartnerName, ";
      sql += "Account_Relationship__c.Account__c AS myCustomerPKey, ";
      sql += "Account_Relationship__c.Ranking__c AS myRanking, ";
      sql += "Account_Relationship__c.Relationship_Type__c AS myRelationshipType, ";
      sql += "Account.TECH_IndustryMobile__c AS myIndustryCode ";
      sql += "FROM Account_Relationship__c ";
      sql += "JOIN Account ON Account.Id = Account_Relationship__c.Related_Account__c ";
      sql += "WHERE (1=1) ";
      sql += " AND Account_Relationship__c.Account__c = '#customerPKey#' ";
      sql += " AND Account_Relationship__c.Relationship_Type__c = '#relationshipType#' ";
      sql += " AND Account_Relationship__c.Related_Account__c  != '#notThisCustomer#' ";
      if(!orderCreation){
        if(relationshipType == 'AG'){
          sql += " AND Account_Relationship__c.Related_Account__c != '#customerPKey#' ";
        }
        else if(relationshipType == 'ZC' ){
          sql += " AND Account_Relationship__c.Ranking__c = '1' ";
        }else if(relationshipType == 'RE' ){
          sql += " GROUP BY Relationship_Type__c HAVING COUNT(*) = 1 ";
        }else if(relationshipType == 'WE' ){
          sql += " GROUP BY Relationship_Type__c HAVING COUNT(*) = 1 ";
        }else if(relationshipType == 'ZE' ){
          sql += " GROUP BY Relationship_Type__c HAVING COUNT(*) = 1 ";
        }
      }
      else{
        if(relationshipType != 'AG'){
          sql += " GROUP BY Relationship_Type__c HAVING COUNT(*) = 1 "
        }
        sql += " ORDER BY ";
        sql += " CASE WHEN Account_Relationship__c.Ranking__c = 1 THEN 0 ELSE 1 END,  ";
        sql += " Account_Relationship__c.CreatedDate ASC ";
      }
      sql += " LIMIT 1 ";
      return Utils.replaceMacrosParam(sql, sqlParams);
    ]]></Load>
  </Database>
</DataSource>
