<Process name="Call::StoreCockpitTabProcess" defaultAction="ShowCockpit_Decision" schemaVersion="0.0.0.5">
  <Entry>
    <ProcessContext>
      <Declarations>
        <Declaration name="CardController" type="BoStoreCockpitHelper" />
        <Declaration name="CurrentUser" type="DomPKey" />
        <Declaration name="SfReplicationCallbacks" type="BoSfReplicationCallbacks" />
        <!-- Card: Header -->
        <Declaration name="CustomerDetail" type="BoCustomer" />
        <Declaration name="OrderInfo" type="LuCallOrderInfo" />
        <Declaration name="CardHeader_DataLoaded" type="DomBool" />
        <Declaration name="CustomerContactInfo" type="Object" />
        <Declaration name="isListingModified" type="DomBool" />
         <Declaration name="MyAccountUrl" type="LoSysMobileLink" />
        <!-- Card: Customer Cases -->
        <Declaration name="MyCardCustomerCases_List" type="LoMyCustomerCases" />
        <Declaration name="MyCardCustomerCases_Info" type="Object" />
        
        <Declaration name="CardOrderHistory_InformationText" type="String" />
        <Declaration name="CardOrderHistory_OrderList" type="LoOrderOverview" />
        <Declaration name="CardOrderHistory_ContextMenuList" type="LoOrderOverviewContextMenu" />
        <Declaration name="CardOrderHistory_DataLoaded" type="DomBool" />
        <Declaration name="CreateNewOrder_OrderMetaPKey" type="DomPKey" />

        <!-- Card: User Notes -->
        <Declaration name="CardNotes_InformationText" type="String" />
        <Declaration name="CardNotes_List" type="LoCallNotes" />
        <Declaration name="CardNotes_DataLoaded" type="DomBool" />
        <Declaration name="NoteDetail" type="LiCallNote" />
        <Declaration name="NoteText" type="LoCallNotes" />
        <Declaration name="NotePKey" type="LoCallNotes" />
        <Declaration name="RefreshNoteList" type="DomBool" />
       
        <!-- Card: MyStoreCheck-->
        <Declaration name="SetCardMyStoreCheck_DataLoaded" type="DomBool" />
        <Declaration name="CardMyStoreCheckSurvey_List" type="LoMyPreviousStoreCheckSurvey" />
        <!-- Card: MyDVRPDistribution-->
        <Declaration name="SetCardMyDVRPDistribution_DataLoaded" type="DomBool" />
        <Declaration name="CardMyDVRPDistributionSurvey_List" type="LoMyPreviousDistributionSurvey" />
        <!-- Card: MyDVRPVisibility-->
        <Declaration name="SetCardMyDVRPVisibility_DataLoaded" type="DomBool" />
        <Declaration name="CardMyDVRPVisibilitySurvey_List" type="LoMyPreviousVisibilitySurvey" />
        <!-- Card: MyDVRPPromotion-->
        <Declaration name="SetCardMyDVRPPromotion_DataLoaded" type="DomBool" />
        <Declaration name="MyPromotionCalendar" type="LuMySalesOrgAttachment" />
        <!-- Card: MyDVRPTrainings-->
        <Declaration name="SetCardMyDVRPTrainings_DataLoaded" type="DomBool" />
        <Declaration name="CardMyDVRPTrainingSurvey_List" type="LoMyPreviousTrainingSurvey" />
        <!-- Card: Follow Up Visits -->
        <Declaration name="CardFollowUpVisits_DataLoaded" type="DomBool" />
        <Declaration name="CardFollowUpVisits_List" type="LoAgendaOverview" />
        <Declaration name="FollowUpVisitsInfo" type="Object" />
        <Declaration name="CardFollowUpVisits_DateFrom" type="String" />
        <Declaration name="CardFollowUpVisits_TimeFrom" type="String" />
        <Declaration name="CardFollowUpVisits_AllDay" type="String" />
        <Declaration name="CardFollowUpVisits_CallMetaPKey" type="String" />
        <Declaration name="CardFollowUpVisits_CustomerPKey" type="String" />
        <Declaration name="CardFollowUpVisits_ButtonPressed" type="String" />
        <Declaration name="CardFollowUpVisits_SubstitutedUsrPKey" type="DomPKey" />
        <Declaration name="CardFollowUpVisits_IsManagedCustomer" type="DomBool" />
        <Declaration name="CardFollowUpVisits_ContextMenuList" type="LoAgendaOverviewContextMenu" />
        <!-- Card: Custom follow up scheduling -->
        <Declaration name="MyCardScheduleMeeting_DataLoaded" type="DomBool" />
       
        <!-- Card: Satisfaction survey -->
        <Declaration name="MyCardSatisfactionSurvey_DataLoaded" type="DomBool" />
        <Declaration name="CardMySatisfactionSurvey_List" type="LoMyPreviousSatisfactionSurvey" />
  
        <!-- Card: My Sales Folder-->
        <Declaration name="CardMySalesFolder_DataLoaded" type="DomBool" />
        <Declaration name="CardMySalesFolder_List" type="LoSalesFolderCallCustomer" />
        <!-- Card: My Sales Agreement -->
        <Declaration name="CardMySalesAgreement_DataLoaded" type="DomBool" />
        <Declaration name="BoMySalesAgreement" type="BoMySalesAgreement" />
        <Declaration name="LoMySalesAgreements" type="LoMySalesAgreements" />
        <!-- Card: My Sales Agreement -->
        <Declaration name="CardMyNewTask_DataLoaded" type="DomBool" />

        <!--Declaration for call complete-->
        <Declaration name="Completed" type="String" />
        <Declaration name="isReadOnly" type="DomBool" />

        <!-- Card: Step 6 FollowUp Card Notes -->
        <Declaration name="CardFollowUpNotes_List" type="LoMyCallFollowUpNotes" />
        <Declaration name="CardFollowUpNotes_DataLoaded" type="DomBool" />

        <!-- Card: Step 2 Preparation My KPIs-->
        <Declaration name="MyCRMAKPIlinks_List" type="LoSysMobileLink" />
        <Declaration name="CardMyCRMAKPIs_DataLoaded" type="DomBool" />

        <!-- Card: Step 2 Preparation Orders Overview -->
        <Declaration name="CardMyOrdersOverview_List" type="LoMyOrderStatusCustomer" />
        <Declaration name="CardMyOrdersOverview_DataLoaded" type="DomBool" />
        
      </Declarations>
      <Parameters>
        <Input name="MainBO" type="BoCall" />
        <Input name="CustomerPKey" type="String" />
        <Input name="CurrentCustomerPKey" type="String" />
        <Input name="CurrentCustomerName" type="String" />
        <Input name="CallDate" type="String" />
        <Input name="LeadTime" type="String" />
        <Input name="MobilityUserGuidance" type="String" />
        <Input name="CallDateThru" type="String" />
      </Parameters>
    </ProcessContext>
    <EntryActions>
      <Action name="AssignResponsible" actionType="LOGIC" call="ApplicationContext::User.getPKey">
        <Return name="ProcessContext::CurrentUser" />
      </Action>
      <Action name="CreateReplicationCallBacksBo" actionType="CREATE" type="BoSfReplicationCallbacks">
        <Return name="ProcessContext::SfReplicationCallbacks" />
      </Action>
      <!-- Loading Card Controller-->
      <Action actionType="CREATE" name="CreateCardController" type="BoStoreCockpitHelper">
        <Parameters>
          <Input name="mobilityUserGuidance" value="ProcessContext::MobilityUserGuidance" />
        </Parameters>
        <Return name="ProcessContext::CardController" />
      </Action>
      <!-- Is SFBackend -->
      <Action name="SetIsSfBackend" actionType="LOGIC" call="Utils.isSfBackend">
        <Return name="ProcessContext::IsSfBackend" />
      </Action>
      <Action name="CreateCallReportsBo" actionType="CREATE" type="BoCallReports">
        <Return name="ProcessContext::boCallReports" />
      </Action>
      <!-- Card: Mobile Links -->
      <Action name="CardMobileLinks_GetList" actionType="CREATE" type="LoSysMobileLink">
        <Return name="ProcessContext::cardMobileLinks_List" />
      </Action>
      <!-- Card: My DVRP Distribution -->
      <Action name="CardMyDVRPDistribution_GetList" actionType="CREATE" type="LoSysMobileLink">
        <Return name="ProcessContext::cardMyDVRPDistributionReport_List" />
      </Action>
      <!-- Card: Notes -->
      <Action name="CardNotes_GetList" actionType="CREATE" type="LoCallNotes">
        <Return name="ProcessContext::CardNotes_List" />
      </Action>
      <!-- Card: Notes -->
      <Action name="CardFollowUpNotes_GetList" actionType="CREATE" type="LoMyCallFollowUpNotes">
        <Return name="ProcessContext::CardFollowUpNotes_List" />
      </Action>
      <!-- Card: Follow Up Visits -->
      <Action name="CardVisitsFollowUpCard_GetList" actionType="CREATE" type="LoAgendaOverview">
        <Return name="ProcessContext::CardFollowUpVisits_List" />
      </Action>
      <!-- Call readonly check-->
      <Action name="IsCallReadOnly" actionType="LOGIC" call="ProcessContext::MainBO.isReadOnly">
        <Return name="ProcessContext::isReadOnly" />
      </Action>
     
      <Action actionType="LOGIC" name="MySetVisitSurveyBtnEditability" call="ProcessContext::MainBO.myGetButtonEditability">
        <Parameters>
          <Input name="token" value="VisitSurvey" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::IsVisitSurveyBtnEditable" />
      </Action>
      <Action actionType="LOAD" name="MyLoadPromotionCalendar" type="LuMySalesOrgAttachment">
        <Parameters>
          <Input name="pKey" value="ApplicationContext::User.boUserSales.mySalesOrgId" />
          <Input name="usage" value="PromotionGrid" type='literal'/>
          <Input name="skipFileTitleFilter" value="1" type='literal'/>
        </Parameters>
        <Return name="ProcessContext::MyPromotionCalendar" />
      </Action>
    </EntryActions>
  </Entry>
  <Body>
    <Actions>
    <Action name="ShowCockpit_Decision" actionType="DECISION" parameter="ProcessContext::MainBO.luCallMeta.id">
        <Case value="SISO" action="ShowCockpitSISO" />
        <Case value="SO" action="ShowCockpitSO" />
        <CaseElse action="ShowCockpitSISO" />
      </Action>
      <Action actionType="VIEW" name="ShowCockpitSISO">
        <UIDescription>Call::StoreCockpitTabUI</UIDescription>
        <Events>
          <!-- Card: Header -->
          <Event name="cardHeader_loadData" action="CardHeaderLoadData" />
          <Event name="cardHeader_showDetails" action="CardHeader_showDetail" />
          <Event name="mailPressed" action="StartMail" />
          <Event name="completeCall" action="CheckForEmptyDateFields" />
          <Event name="confirmCall" action="ConfirmCall" />
          <Event name="resetToPlannedStateCall" action="ResetToPlannedStateCall" />
          <Event name="createMyNewOrder" action="CreateMyNewWizardOrder" />
          <Event name="navigateMyAccountEvent" action="NavigateToCurrentAccount" />
          <Event name="StartPhoneCall" action="StartPhoneCall" />
          <!-- Card: Customer cases -->
          <Event name="cardCustomerCases_loadData" action="MyCardCustomerCasesLoadData" />
          <Event name="cardCustomerCases_showAllCases" action="cardCustomerCases_showAllCases" />
          <!-- Card: User Notes-->
          <Event name="CardNotes_loadData" action="SetCardNotes_DataLoaded" />
          <Event name="CardNotes_itemSelected" action="CardNotes_LoadNote" />
          <Event name="CardNotes_showAllNotes" action="CardNotes_ShowNotes" />
          <Event name="CardNotes_addNewNotePressed" action="CardNotes_LoadCurrentNote" />
          <!-- Card: Follow Up Visits -->
          <Event name="CardFollowUpVisits_loadData" action="SetCardFollowUpVisits_DataLoaded" />
          <Event name="CardFollowUpVisits_createFollowUpVisitPressed" action="CardFollowUpVisits_AddNewVisit" />
          <Event name="CardFollowUpVisits_contextMenuOpening" action="CardFollowUpVisits_GetContextMenu" />
          <Event name="CardFollowUpVisits_contextMenuItemSelected" action="ContextMenu_CustomerOnDevice_Decision" />
          <!-- Card: Step 3 Store Check-->
          <Event name="cardMyStoreCheck_loadData" action="SetCardMyStoreCheck_DataLoaded" />
          <Event name="cardMyStoreCheck_createNewStoreCheckSurvey" action="MyStartStoreCheckSurveyProcess_Decision" />
          <Event name="cardMyStoreCheckSurvey_itemSelected" action="MyOpenPreviousStoreCheckSurvey" />
          <!-- Card: Step 5 DVRP Distribution-->
          <Event name="cardMyDVRPDistribution_loadData" action="SetCardMyDVRPDistribution_DataLoaded" />
          <Event name="cardMyDVRPDistribution_createNewDistributionSurvey" action="MyStartDistributionSurveyProcess_Decision" />
          <Event name="cardMyDistributionSurvey_itemSelected" action="MyOpenPreviousDistributionSurvey" />
          <Event name="cardMyDVRPDistribution_viewDistributionReport" action="CardMyMobileLinks_OpenApp" />
          <!-- Card: Step 5 DVRP Visibility-->
          <Event name="cardMyDVRPVisibility_loadData" action="SetCardMyDVRPVisibility_DataLoaded" />
          <Event name="cardMyDVRPVisibility_createNewVisibilitySurvey" action="MyStartVisibilitySurveyProcess_Decision" />
          <Event name="cardMyVisibilitySurvey_itemSelected" action="MyOpenPreviousVisibilitySurvey" />
          <!-- Card: Step 5 DVRP Promotion-->
          <Event name="cardMyDVRPPromotion_loadData" action="SetCardMyDVRPPromotion_DataLoaded" />
          <Event name="cardMyDVRPPromotion_showPromotionCalendar" action="StartPromotionCalendarProcess" />
          <Event name="cardMyDVRPPromotion_showPromotionAccount" action="StartMyPromotionAccountProcess" />
          <Event name="cardMyDVRPPromotion_showMyPromotionTabUI" action="MyStartPromotionSurveyProcess_Decision" />
          <Event name="cardMyDVRPPromotion_showMyPromotionCalendar" action="StartPromotionCalendarProcess" />
          <!-- Card: Step 5 DVRP Trainings-->
          <Event name="cardMyDVRPTrainings_loadData" action="SetCardMyDVRPTrainings_DataLoaded" />
          <Event name="CardMyDVRPTraining_itemSelected" action="MyOpenPreviousTrainingSurvey" />
          <Event name="cardMyDVRPTrainings_showMyTrainingTabUI" action="MyStartTrainingSurveyProcess_Decision" />
          <Event name="cardMyDVRPTrainings_openSalesFolder" action="OpenSalesFolderLookupByCustomer" />

          <!-- Card: Custom follow up -->
          <Event name="CardScheduleMeeting_loadData" action="CardScheduleMeeting_DataLoad" />
          <Event name="CardScheduleMeeting_LinkBarButton" action="CardScheduleMeeting_OpenAgenda" />
          <!-- Card: Step 6 - Follow Up CSAT Survey-->
          <Event name="MyCardSatisfactionSurvey_loadData" action="SetMyCardSatisfactionSurvey_DataLoaded" />
          <Event name="cardMySatisfaction_createNewSatisfactionSurvey" action="MyStartSatisfactionSurveyProcess_Decision" />
          <Event name="cardMySatisfactionSurvey_itemSelected" action="MyOpenPreviousSatisfactionSurvey" />

          <!-- Card: Sales Folder -->
          <Event name="CardMySalesFolder_loadData" action="CardMySalesFolder_DataLoad"/>
          <Event name="mySalesFolderSelected" action="MyLoadPromotions" />
          <Event name="cardMySalesFolder_showAllSalesFolders" action="MyOpenAllSalesFolders" />
          <!-- Card: Sales Agreement -->
          <Event name="CardMySalesAgreement_loadData" action="CardMySalesAgreement_DataLoad"/>
          <Event name="mySalesAgreementSelected" action="MyLoadSalesAgreement" />

          <!-- Card: Step 6 Followup Card Notes-->
          <Event name="CardFollowupNotes_loadData" action="SetCardFollowUpNotes_DataLoaded" />
          <Event name="CardFollowUpNotes_addNewNotePressed" action="CardFollowUpNotes_LoadCurrentNote" />

          <!-- Card: Step 2 Preparation - My KPIs-->
          <Event name="myCRMAKPILinks_loadData" action="MyLoadMyCRMAKPILinks" />
          <Event name="myCRMAKPILinks_myLinkSelected" action="MyOpenCRMADashboard" />

          <!-- Card: Step 2 Preparation - Orders Overview-->
          <Event name="CardMyOrdersOverview_loadData" action="MyLoadOrdersOverview" />
          <Event name="CardMyOrdersOverview_OpenAllOrders" action="CardMyOrdersOverviewCustomer_OpenAllOrders" />

          <!-- Cockpit Menu Events -->
          <Event name="CockpitMenu_StartOrdersProcess" action="SaveBeforeOrderSubProcess_Decision" />
          <Event name="CockpitMenu_StartAttachmentProcess" action="StartAttachmentProcess" />
          <Event name="CockpitMenu_StartNotesProcess" action="StartNotesProcess" />
          <Event name="CockpitMenu_StartSalesFolderProcess" action="StartSalesFolderOverviewProcess" />
          <Event name="CockpitMenu_StartCompleteProcess" action="Save_LoadAndSetPrerequisites_Complete" />
          <Event name="CockpitMenu_StartTasksProcess" action="StartTasksProcess" />
        </Events>
      </Action>
      <Action actionType="VIEW" name="ShowCockpitSO">
        <UIDescription>Call::MyStoreCockpitTabSOUI</UIDescription>
        <Events>
          <!-- Card: Header -->
          <Event name="cardHeader_loadData" action="CardHeaderLoadData" />
          <Event name="cardHeader_showDetails" action="CardHeader_showDetail" />
          <Event name="mailPressed" action="StartMail" />
          <Event name="completeCall" action="CheckForEmptyDateFields" />
          <Event name="confirmCall" action="ConfirmCall" />
          <Event name="resetToPlannedStateCall" action="ResetToPlannedStateCall" />
          <Event name="createMyNewOrder" action="CreateMyNewWizardOrder" />
          <Event name="navigateMyAccountEvent" action="NavigateToCurrentAccount" />
          <Event name="StartPhoneCall" action="StartPhoneCall" />
          <!-- Card: Customer cases -->
          <Event name="cardCustomerCases_loadData" action="MyCardCustomerCasesLoadData" />
          <Event name="cardCustomerCases_showAllCases" action="cardCustomerCases_showAllCases" />
          <!-- Card: User Notes-->
          <Event name="CardNotes_loadData" action="SetCardNotes_DataLoaded" />
          <Event name="CardNotes_itemSelected" action="CardNotes_LoadNote" />
          <Event name="CardNotes_showAllNotes" action="CardNotes_ShowNotes" />
          <Event name="CardNotes_addNewNotePressed" action="CardNotes_LoadCurrentNote" />
          <!-- Card: Follow Up Visits -->
          <Event name="CardFollowUpVisits_loadData" action="SetCardFollowUpVisits_DataLoaded" />
          <Event name="CardFollowUpVisits_createFollowUpVisitPressed" action="CardFollowUpVisits_AddNewVisit" />
          <Event name="CardFollowUpVisits_contextMenuOpening" action="CardFollowUpVisits_GetContextMenu" />
          <Event name="CardFollowUpVisits_contextMenuItemSelected" action="ContextMenu_CustomerOnDevice_Decision" />
          <!-- Card: Step 3 Store Check-->
          <Event name="cardMyStoreCheck_loadData" action="SetCardMyStoreCheck_DataLoaded" />
          <Event name="cardMyStoreCheck_createNewStoreCheckSurvey" action="MyStartStoreCheckSurveyProcess_Decision" />
          <Event name="cardMyStoreCheckSurvey_itemSelected" action="MyOpenPreviousStoreCheckSurvey" />
          <!-- Card: Step 5 DVRP Distribution-->
          <Event name="cardMyDVRPDistribution_loadData" action="SetCardMyDVRPDistribution_DataLoaded" />
          <Event name="cardMyDVRPDistribution_createNewDistributionSurvey" action="MyStartDistributionSurveyProcess_Decision" />
          <Event name="cardMyDistributionSurvey_itemSelected" action="MyOpenPreviousDistributionSurvey" />
          <Event name="cardMyDVRPDistribution_viewDistributionReport" action="CardMyMobileLinks_OpenApp" />
          <!-- Card: Step 5 DVRP Visibility-->
          <Event name="cardMyDVRPVisibility_loadData" action="SetCardMyDVRPVisibility_DataLoaded" />
          <Event name="cardMyDVRPVisibility_createNewVisibilitySurvey" action="MyStartVisibilitySurveyProcess_Decision" />
          <Event name="cardMyVisibilitySurvey_itemSelected" action="MyOpenPreviousVisibilitySurvey" />
          <!-- Card: Step 5 DVRP Promotion-->
          <Event name="cardMyDVRPPromotion_loadData" action="SetCardMyDVRPPromotion_DataLoaded" />
          <Event name="cardMyDVRPPromotion_showPromotionCalendar" action="StartPromotionCalendarProcess" />
          <Event name="cardMyDVRPPromotion_showPromotionAccount" action="StartMyPromotionAccountProcess" />
          <Event name="cardMyDVRPPromotion_showMyPromotionTabUI" action="MyStartPromotionSurveyProcess_Decision" />
          <Event name="cardMyDVRPPromotion_showMyPromotionCalendar" action="StartPromotionCalendarProcess" />
          <!-- Card: Step 5 DVRP Trainings-->
          <Event name="cardMyDVRPTrainings_loadData" action="SetCardMyDVRPTrainings_DataLoaded" />
          <Event name="CardMyDVRPTraining_itemSelected" action="MyOpenPreviousTrainingSurvey" />
          <Event name="cardMyDVRPTrainings_showMyTrainingTabUI" action="MyStartTrainingSurveyProcess_Decision" />
          <Event name="cardMyDVRPTrainings_openSalesFolder" action="OpenSalesFolderLookupByCustomer" />
          <!-- Card: Custom follow up -->
          <Event name="CardScheduleMeeting_loadData" action="CardScheduleMeeting_DataLoad" />
          <Event name="CardScheduleMeeting_LinkBarButton" action="CardScheduleMeeting_OpenAgenda" />
          <!-- Card: Step 6 - Follow Up CSAT Survey-->
          <Event name="MyCardSatisfactionSurvey_loadData" action="SetMyCardSatisfactionSurvey_DataLoaded" />
          <Event name="cardMySatisfaction_createNewSatisfactionSurvey" action="MyStartSatisfactionSurveyProcess_Decision" />
          <Event name="cardMySatisfactionSurvey_itemSelected" action="MyOpenPreviousSatisfactionSurvey" />

          <!-- Card: Sales Folder -->
          <Event name="CardMySalesFolder_loadData" action="CardMySalesFolder_DataLoad"/>
          <Event name="mySalesFolderSelected" action="MyLoadPromotions" />
          <Event name="cardMySalesFolder_showAllSalesFolders" action="MyOpenAllSalesFolders" />
          <!-- Card: Sales Agreement -->
          <Event name="CardMySalesAgreement_loadData" action="CardMySalesAgreement_DataLoad"/>
          <Event name="mySalesAgreementSelected" action="MyLoadSalesAgreement" />

          <!-- Card: Step 6 Followup Card Notes-->
          <Event name="CardFollowupNotes_loadData" action="SetCardFollowUpNotes_DataLoaded" />
          <Event name="CardFollowUpNotes_addNewNotePressed" action="CardFollowUpNotes_LoadCurrentNote" />
          <!-- Card: Step 2 Preparation - My KPIs-->
          <Event name="myCRMAKPILinks_loadData" action="MyLoadMyCRMAKPILinks" />
          <Event name="myCRMAKPILinks_myLinkSelected" action="MyOpenCRMADashboard" />

          <!-- Card: Step 2 Preparation - Orders Overview-->
          <Event name="CardMyOrdersOverview_loadData" action="MyLoadOrdersOverview" />
          <Event name="CardMyOrdersOverview_OpenAllOrders" action="CardMyOrdersOverviewCustomer_OpenAllOrders" />

          <!-- Cockpit Menu Events -->
          <Event name="CockpitMenu_StartOrdersProcess" action="SaveBeforeOrderSubProcess_Decision" />
          <Event name="CockpitMenu_StartAttachmentProcess" action="StartAttachmentProcess" />
          <Event name="CockpitMenu_StartNotesProcess" action="StartNotesProcess" />
          <Event name="CockpitMenu_StartSalesFolderProcess" action="StartSalesFolderOverviewProcess" />
          <Event name="CockpitMenu_StartCompleteProcess" action="Save_LoadAndSetPrerequisites_Complete" />
          <Event name="CockpitMenu_StartTasksProcess" action="StartTasksProcess" />
        </Events>
      </Action>
      <!-- Cockpit Menu Items -->
      <Action actionType="PROCESS" name="StartStoreCheckProcess" process="Call::QuestionTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
        </Parameters>
        <TransitionTo action="MyStartTransactionAfterSurvey" />
      </Action>
      <Action actionType="PROCESS" name="StartSurveyProcess" process="Call::SurveyTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
        </Parameters>
        <TransitionTo action="ResetLoPOSAfterSurveyTabProcess" />
      </Action>
      <Action actionType="PROCESS" name="StartPromotionCalendarProcess" process="Call::MyPromotionStoreCalendarProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <!-- <Input name="CallDate" value="ProcessContext::MainBO.DateFrom" />
          <Input name="CustomerPKey" value="ProcessContext::MainBO.BpaMainPKey" />
          <Input name="LeadTime" value="ProcessContext::MainBO.LuCallMeta.PrmFindingLeadTime" /> -->
        </Parameters>
      </Action>
      <Action actionType="PROCESS" name="StartPromotionReviewProcess" process="Call::PromotionReviewProcess">
        <Parameters>
          <Input name="CallDate" value="ProcessContext::MainBO.DateFrom" />
          <Input name="CustomerPKey" value="ProcessContext::MainBO.BpaMainPKey" />
          <Input name="LeadTime" value="ProcessContext::MainBO.LuCallMeta.PrmFindingLeadTime" />
          <Input name="CustomerName" value="ProcessContext::MainBO.luCustomer.name" />
          <Input name="CallDateThru" value="ProcessContext::MainBO.DateThru" />
        </Parameters>
      </Action>
      <Action name="SaveBeforeOrderSubProcess_Decision" actionType="DECISION" parameter="ProcessContext::MainBO.objectStatus">
        <Case value="1" action="SaveBeforeOrderSubProcess" />
        <Case value="3" action="SaveBeforeOrderSubProcess" />
        <Case value="5" action="SaveBeforeOrderSubProcess" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <Action actionType="VALIDATION" name="SaveBeforeOrderSubProcess">
        <Validations>
          <Validation name="ProcessContext::MainBO.doValidateAsync" />
        </Validations>
        <TransitionTo action="SaveBeforeOrderSubProcessValidationResult_Decision" />
      </Action>
      <Action name="SaveBeforeOrderSubProcessValidationResult_Decision" actionType="DECISION" parameter="ProcessContext::validationResult">
        <Case value="validateOk" action="SaveBeforeOrderSubProcessSave" />
        <Case value="validateIgnore" action="CardMyOrdersOverviewCustomer_OpenAllOrders" />
      </Action>
      <Action actionType="LOGIC" name="SaveBeforeOrderSubProcessSave" call="Facade.startTransaction">
        <TransitionTo action="doSaveBeforeOrderSubProcessSave" />
      </Action>
      <Action actionType="LOGIC" name="doSaveBeforeOrderSubProcessSave" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="SaveBeforeOrderSubProcessCommit" />
      </Action>
      <Action actionType="LOGIC" name="SaveBeforeOrderSubProcessCommit" call="Facade.commitTransaction">
        <TransitionTo action="CardMyOrdersOverviewCustomer_OpenAllOrders" />
      </Action>
      <Action actionType="PROCESS" name="StartAttachmentProcess" process="Call::AttachmentTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="TypeFilter" type="Literal" value="PicturesVideos" />
        </Parameters>
        <TransitionTo action="Save_AssignDisplayedSubcomponentNameForPictures" />
      </Action>
      <Action actionType="PROCESS" name="StartTasksProcess" process="Todo::OverviewProcess">
        <Parameters>
          <Input name="VisitPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="VisitName" value="ProcessContext::MainBO.myVisitTitle" />
          <Input name="Mode" value="VisitCockpit" type="Literal" />
        </Parameters>
      </Action>
      <Action actionType="PROCESS" name="StartNotesProcess" process="Call::NotesTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
        </Parameters>
        <TransitionTo action="Save_AfterVisitNote_Start" />
      </Action>
      <Action actionType="PROCESS" name="StartSalesFolderOverviewProcess" process="SalesFolder::SalesFolderOverviewProcess">
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::MainBO.BpaMainPKey" />
          <Input name="CurrentCustomerName" value="ProcessContext::MainBO.luCustomer.name" />
          <Input name="CallDate" value="ProcessContext::MainBO.DateFrom" />
          <Input name="LeadTime" value="ProcessContext::MainBO.LuCallMeta.PrmFindingLeadTime" />
          <Input name="NavigationMode" type="Literal" value="CustomerSalesFolder" />
          <Input name="CallDateThru" value="ProcessContext::MainBO.DateThru" />
        </Parameters>
      </Action>
      <Action actionType="PROCESS" name="StartAssetSubProcess" process="AssetManagement::CallAssetOverviewProcess">
        <Parameters>
          <Input name="ClbBO" value="ProcessContext::MainBO" />
          <Input name="From" type="Literal" value="Navigation" />
        </Parameters>
        <TransitionTo action="Save_Only" />
      </Action>
      <Action actionType="LOGIC" name="Save_Only" call="Facade.startTransaction">
        <TransitionTo action="doSave_Only" />
      </Action>
      <Action actionType="LOGIC" name="doSave_Only" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="Save_Only_Commit" />
      </Action>
      <Action actionType="LOGIC" name="Save_Only_Commit" call="Facade.commitTransaction"></Action>
      <Action actionType="LOGIC" name="Save_LoadAndSetPrerequisites_Complete" call="Facade.startTransaction">
        <TransitionTo action="doSave_LoadAndSetPrerequisites_Complete" />
      </Action>
      <Action actionType="LOGIC" name="doSave_LoadAndSetPrerequisites_Complete" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="Save_LoadAndSetPrerequisites_Complete_Commit" />
      </Action>
      <Action actionType="LOGIC" name="Save_LoadAndSetPrerequisites_Complete_Commit" call="Facade.commitTransaction">
        <TransitionTo action="LoadAndSetPrerequisites_Complete_Process" />
      </Action>
      <Action name="LoadAndSetPrerequisites_Complete_Process" actionType="LOGIC" call="ProcessContext::MainBO.boJobManager.loadAndSetPrerequisites">
        <Parameters>
          <Input name="loadType" type="Literal" value="StatusChange_Complete" />
        </Parameters>
        <TransitionTo action="StartCompleteProcess" />
      </Action>
      <Action actionType="PROCESS" name="StartCompleteProcess" process="Call::CompleteTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="boCallReports" value="ProcessContext::boCallReports" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::Completed" value="completed" />
        </ReturnValues>
        <TransitionTo action="EndDecision" />
      </Action>
      <!-- Card: Header -->
      <Action actionType="Logic" name="StartPhoneCall" call="ProcessContext::CustomerDetail.processPhoneCall">
        <Parameters>
          <Input name="phoneNumber" value="Event.phoneNumber" />
        </Parameters>
      </Action>
      <Action actionType="LOAD" name="CardHeaderLoadData" type="BoCustomer">
        <Parameters>
          <Input name="pKey" value="ProcessContext::CustomerPKey" />
        </Parameters>
        <Return name="ProcessContext::CustomerDetail" />
        <TransitionTo action="SetCardHeader_DataLoaded" />
      </Action>
      <!-- <Action actionType="LOGIC" name="LoadLoContactPartner" call="ProcessContext::CustomerDetail.loadLoContactPartnerAsync">
        <Parameters>
          <Input name="bReload" type="Literal" value="0" />
          <Input name="CustomerPKey" type="String" value="ProcessContext::CustomerPKey" />
        </Parameters>
        <TransitionTo action="CheckForContactPartner" />
      </Action>
      <Action actionType="LOGIC" name="CheckForContactPartner" call="ProcessContext::CustomerDetail.getContactPartner">
        <Return name="ProcessContext::CustomerContactInfo" />
        <TransitionTo action="SetCardHeader_DataLoaded" />
      </Action> -->
      <Action actionType="LOGIC" name="SetCardHeader_DataLoaded" call="Utils.identity">
        <Return name="ProcessContext::CardHeader_DataLoaded" />
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
      </Action>
      <Action actionType="PROCESS" name="CardHeader_showDetail" process="Customer::CallCustomerReviewProcess">
        <Parameters>
          <Input name="CustomerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::CustomerObjectStatus" value="customerObjectState" />
          <Return name="ProcessContext::SaveFlag" value="saveFlag" />
          <Return name="ProcessContext::isListingModified" value="isListingModified" />
        </ReturnValues>
        <TransitionTo action="ReloadCustomer" />
      </Action>
      <Action name="ReloadCustomer" actionType="Logic" call="ProcessContext::MainBO.updateCustomerInfo">
        <Parameters>
          <Input name="customerObjectStatus" value="ProcessContext::CustomerObjectStatus" />
          <Input name="saveFlag" value="ProcessContext::SaveFlag" />
        </Parameters>
        <TransitionTo action="ListingModuleUpdateDecision" />
      </Action>
      <Action name="ListingModuleUpdateDecision" actionType="DECISION" parameter="ProcessContext::isListingModified">
        <Case value="1" action="UpdateProductInitialize" />
        <CaseElse action="CardHeaderLoadData" />
      </Action>
      <Action actionType="LOGIC" name="UpdateProductInitialize" call="ProcessContext::MainBO.boJobManager.updateProductsInitialize">
        <TransitionTo action="CardHeaderLoadData" />
      </Action>
      <Action actionType="LOGIC" name="StartMail" call="ProcessContext::CustomerDetail.sendMail">
        <Parameters>
          <Input name="Mail" value="ProcessContext::CustomerDetail.primaryContact.email" />
        </Parameters>
      </Action>
      <Action actionType="LOGIC" name="ConfirmCall" call="ProcessContext::MainBO.myConfirmCall">
        <TransitionTo action="SetMyVisitTabTitle" />
      </Action>
      <Action actionType="LOGIC" name="ResetToPlannedStateCall" call="ProcessContext::MainBO.myResetToPlannedState">
        <TransitionTo action="MySetVisitSurveyBtnEditabilityAfterBackToPlanned" />
      </Action>
      <Action actionType="LOGIC" name="MySetVisitSurveyBtnEditabilityAfterBackToPlanned" call="ProcessContext::MainBO.myGetButtonEditability">
        <Parameters>
          <Input name="token" value="VisitSurvey" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::IsVisitSurveyBtnEditable" />
        <TransitionTo action="SetMyVisitTabTitle" />        
      </Action>
      <Action actionType="LOGIC" name="SetMyVisitTabTitle" call="ProcessContext::MainBO.mySetVisitTabTitle">
        <TransitionTo action="ShowCockpit_Decision" />
      </Action>
      <!-- START - Complete Call Check -->
      <Action actionType="LOGIC" name="CheckForEmptyDateFields" call="ProcessContext::MainBO.checkForEmptyCallDate">
        <Return name="ProcessContext::ValidationResult" />
        <TransitionTo action="EmptyCalldate_Decision" />
      </Action>
      <Action actionType="DECISION" name="EmptyCalldate_Decision" parameter="ProcessContext::ValidationResult">
        <Case value="invalid" action="ShowCockpit_Decision" />
        <Case value="valid" action="CompleteCall" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <Action actionType="PROCESS" name="CompleteCall" process="Call::CompleteCallProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::Completed" value="completed" />
        </ReturnValues>
        <TransitionTo action="IsCallCompleted" />
      </Action>
      <Action name="IsCallCompleted" actionType="DECISION" parameter="ProcessContext::Completed">
        <Case value="1" action="End" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <!-- END - Complete Call Check -->
       <!-- WIZARD -->
      <Action name="CreateMyNewWizardOrder" actionType="PROCESS" process="Order::CreateNewWithCustomerProcess">
        <Parameters>
          <Input name="ordererPKey" value="ProcessContext::CustomerPKey" />
          <Input name="visitPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::CreateNew_OrderMetaPKey" value="orderMetaPKey" />
          <Return name="ProcessContext::MyPricingTerm_PKey" value="myPricingTermPKey" />
          <Return name="ProcessContext::CreateNew_MyExchangeType" value="myExchangeType" />
          <Return name="ProcessContext::CreateNew_MyDefaultDirectBillToPKey" value="myDefaultDirectBillToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultDirectDeliverToPKey" value="myDefaultDirectDeliverToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultDirectShipToPKey" value="myDefaultDirectShipToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultDirectSoldToPKey" value="myDefaultDirectSoldToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultTransferBillToPKey" value="myDefaultTransferBillToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultTransferShipToPKey" value="myDefaultTransferShipToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultTransferSoldToPKey" value="myDefaultTransferSoldToPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultTransferWholesalerPKey" value="myDefaultTransferWholesalerPKey" />
          <Return name="ProcessContext::CreateNew_MyDefaultSplitType" value="myDefaultSplitType" />
          <Return name="ProcessContext::CreateNew_MyByPassAgreements" value="myByPassAgreements" />
        </ReturnValues>
        <TransitionTo action="CreateNewWizard_Result_Decision" />
      </Action>
      <!-- DESICIONS AFTER CREATE WIZARD -->
      <Action name="CreateNewWizard_Result_Decision" actionType="DECISION" parameter="ProcessContext::CreateNew_OrderMetaPKey">
        <CaseEmpty action="ShowCockpit_Decision" />
        <CaseElse action="CreateOrderFromCallNavigation" />
      </Action>
      <!-- CREATE -->
      <Action actionType="PROCESS" name="CreateOrderFromCallNavigation" process="Order::CreateNewProcess">
        <Parameters>
          <Input name="SdoMetaPKey" value="ProcessContext::CreateNew_OrderMetaPKey" />
          <Input name="OrdererPKey" value="ProcessContext::MainBO.bpaMainPKey" />
          <Input name="ClbMainPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="CallInContext_clbMainPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="CallOutOfStockProducts" value="ProcessContext::MainBO.boJobManager.outOfStockProducts" />
          <Input name="myPricingTermPKey" value="ProcessContext::MyPricingTerm_PKey" />
          <Input name="MyExchangeType" value="ProcessContext::CreateNew_MyExchangeType" />
          <Input name="MyDefaultDirectBillToPKey" value="ProcessContext::CreateNew_MyDefaultDirectBillToPKey" />
          <Input name="MyDefaultDirectDeliverToPKey" value="ProcessContext::CreateNew_MyDefaultDirectDeliverToPKey" />
          <Input name="MyDefaultDirectShipToPKey" value="ProcessContext::CreateNew_MyDefaultDirectShipToPKey" />
          <Input name="MyDefaultDirectSoldToPKey" value="ProcessContext::CreateNew_MyDefaultDirectSoldToPKey" />
          <Input name="MyDefaultTransferBillToPKey" value="ProcessContext::CreateNew_MyDefaultTransferBillToPKey" />
          <Input name="MyDefaultTransferShipToPKey" value="ProcessContext::CreateNew_MyDefaultTransferShipToPKey" />
          <Input name="MyDefaultTransferSoldToPKey" value="ProcessContext::CreateNew_MyDefaultTransferSoldToPKey" />
          <Input name="MyDefaultTransferWholesalerPKey" value="ProcessContext::CreateNew_MyDefaultTransferWholesalerPKey" />
          <Input name="MyDefaultSplitType" value="ProcessContext::CreateNew_MyDefaultSplitType" />
          <Input name="MyByPassAgreements" value="ProcessContext::CreateNew_MyByPassAgreements" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::TriggerReload" value="TriggerReload" />
          <Return name="ProcessContext::GoTo" value="goTo"/>
          <Return name="ProcessContext::ObjExchangeOrder" value="objExchangeOrder" />
          <Return name="ProcessContext::FromOrder" value="fromOrder"/>
          <Return name="ProcessContext::Case" value="case" />
        </ReturnValues>
        <TransitionTo action="ValidateWhichCase" />
      </Action>
      <Action name="ValidateWhichCase" actionType="DECISION" parameter="ProcessContext::Case">
        <Case value="2" action="LoadBoRedirect" />
        <Case value="1" action="CreateOrderFromExchangeOrder" />
        <Case value="0" action="TriggerReloadDecision" />
        <CaseElse action="TriggerReloadDecision" />
      </Action>
      <Action name="LoadBoRedirect" actionType="PROCESS" process="Order::LoadProcess">
        <Parameters>
          <Input name="MainPKey" value="GoTProcessContext::GoTo" />
          <Input name="CustomerPKey" value="ProcessContext::CustomerPKey" />
          <Input name="EndRedirect" value="1" type='Literal'/>
        </Parameters>
        <ReturnValues>
        </ReturnValues>
        <TransitionTo action="LoadBoRedirect2" />
      </Action>
      <Action actionType="PROCESS" name="CreateOrderFromExchangeOrder" process="Order::CreateNewProcess">
        <Parameters>
          <Input name="SdoMetaPKey" value="ProcessContext::objExchangeOrder.orderMetaPKey" />
          <Input name="OrdererPKey" value="ProcessContext::objExchangeOrder.ordererPKey" />
          <Input name="MyPricingTermPKey" value="ProcessContext::objExchangeOrder.myPricingTermPKey" />
          <Input name="MyExchangeType" value="ProcessContext::objExchangeOrder.myExchangeType" />
          <Input name="MySplitForExchangePKey" value="ProcessContext::objExchangeOrder.mySplitForExchangePKey" />
          <Input name="MyByPassAgreements" value="ProcessContext::objExchangeOrder.myByPassAgreements" />
        </Parameters>
        <ReturnValues>
        </ReturnValues>
        <TransitionTo action="LoadBoRedirect2" />
      </Action>
      <Action name="LoadBoRedirect2" actionType="PROCESS" process="Order::LoadProcess">
        <Parameters>
          <Input name="MainPKey" value="GoTProcessContext::FromOrder" />
          <Input name="CustomerPKey" value="ProcessContext::CustomerPKey" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::TriggerReload" value="TriggerReload" />
          <Return name="ProcessContext::GoTo" value="goTo"/>
          <Return name="ProcessContext::ObjExchangeOrder" value="objExchangeOrder" />
          <Return name="ProcessContext::FromOrder" value="fromOrder"/>
          <Return name="ProcessContext::Case" value="case" />
        </ReturnValues>
        <TransitionTo action="ValidateWhichCase" />
      </Action>
      <Action name="TriggerReloadDecision" actionType="DECISION" parameter="ProcessContext::TriggerReload">
        <Case value="1" action="ShowCockpit_Decision" />
        <CaseEmpty action="ShowCockpit_Decision" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <!-- Account Navigation URL-->
      <Action name="NavigateToCurrentAccount" actionType="LOAD" type="LoSysMobileLink">
        <Parameters>
          <Input name="displayTile" type="Literal" value="Account Link" />
          <Input name="displayIn" type="Literal" value="Store Cockpit" />
          <Input name="recordTypeName" type="Literal" value="Custom_Links" />
        </Parameters>
        <Return name="ProcessContext::MyAccountUrl" />
        <TransitionTo action="NavigateToAccountUrl"/>
      </Action>
      <Action name="NavigateToAccountUrl" actionType="LOGIC" call="ProcessContext::MainBO.myNavigateToAccount">
        <Parameters>
          <Input name="customerKey" value="ProcessContext::CustomerPKey"/>
          <Input name="customerUrl" value="ProcessContext::MyAccountUrl.current.url" /> 
          <Input name="schemeName" value="ProcessContext::MyAccountUrl.current.schemeName" /> 
        </Parameters>
      </Action>

      <Action name="CardMyOrdersOverviewCustomer_OpenAllOrders" actionType="PROCESS" process="Order::MyOverviewCustomerProcess" >
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::CustomerPKey"/>
          <Input name="customerName" value="ProcessContext::currentCustomerName"/>
        </Parameters>
      </Action>
      <!-- Card: Step 2 - Customer Cases -->
      <Action actionType="LOAD" name="MyCardCustomerCasesLoadData" type="LoMyCustomerCases">
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::CustomerPKey" />
        </Parameters>
        <Return name="ProcessContext::MyCardCustomerCases_List" />
        <TransitionTo action="MyLoadCustomerCaseInfo" />
      </Action>
      <Action actionType="LOGIC" name="MyLoadCustomerCaseInfo" call="ProcessContext::MyCardCustomerCases_List.myGetCustomerCasesCountAndReduce">
        <Parameters>
          <Input name="loItems" value="ProcessContext::MyCardCustomerCases_List" />
        </Parameters>
        <Return name="ProcessContext::MyCardCustomerCases_Info" />
        <TransitionTo action="SetCardCustomerCases_DataLoaded" />
      </Action>
      <Action actionType="LOGIC" name="SetCardCustomerCases_DataLoaded" call="Utils.identity">
        <Return name="ProcessContext::CardCustomerCases_DataLoaded" />
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
      </Action>
      <Action actionType="PROCESS" name="cardCustomerCases_showAllCases" process="Call::MyCustomerCasesProcess">
        <Parameters>
          <Input name="CustomerPKey" value="ProcessContext::CustomerPKey" />
        </Parameters>
      </Action>
      <!-- END - Customer cases-->
      
      <!-- Card: Your Activities for today -->
      <!-- Setting LoPos invalidated triggers a reset of the current loPos in the loadAndSetPrerequisites
           Without doing that survey activities are not filtered according to the selected product when entering the survey page.
           This action should be called before entering the SurveyTabProcess 
      -->
      <Action name="ResetLoPOSAfterSurveyTabProcess" actionType="LOGIC" call="ProcessContext::MainBO.boJobManager.setLoPOSInvalidated">
        <Parameters>
          <Input name="value" type="Literal" value="1" />
        </Parameters>
        <TransitionTo action="Save_LoadAndSetPrerequisites_ForExcceptions" />
      </Action>

      <!-- Perrigo Custom-->
      <Action actionType="LOGIC" name="MyStartTransactionAfterSurvey" call="Facade.startTransaction">
        <TransitionTo action="MySaveVisitAndSurvey" />
      </Action>
      <Action actionType="LOGIC" name="MySaveVisitAndSurvey" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="MyCommitTransactionAfterSurveySave" />
      </Action>
      <Action actionType="LOGIC" name="MyCommitTransactionAfterSurveySave" call="Facade.commitTransaction">
      </Action>


      <!-- Card: Reporting Survey Exceptions -->
      <Action actionType="LOGIC" name="Save_LoadAndSetPrerequisites_ForExcceptions" call="Facade.startTransaction">
        <TransitionTo action="doSave_LoadAndSetPrerequisites_ForExcceptions" />
      </Action>
      <Action actionType="LOGIC" name="doSave_LoadAndSetPrerequisites_ForExcceptions" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="Save_LoadAndSetPrerequisites_ForExcceptions_Commit" />
      </Action>
      <Action actionType="LOGIC" name="Save_LoadAndSetPrerequisites_ForExcceptions_Commit" call="Facade.commitTransaction">
        <TransitionTo action="LoadAndSetPrerequisites_Complete" />
      </Action>
      <Action name="LoadAndSetPrerequisites_Complete" actionType="LOGIC" call="ProcessContext::MainBO.boJobManager.loadAndSetPrerequisites">
        <Parameters>
          <Input name="loadType" type="Literal" value="ExceptionCard" />
        </Parameters>
        <TransitionTo action="AssignDisplayedSubcomponentNameForSurveyExceptions" />
      </Action>
      <Action actionType="LOGIC" name="AssignDisplayedSubcomponentNameForSurveyExceptions" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::MainBO.boJobManager.loCurrentSurveys" />
          <Input name="type" value="SurveyExceptions" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardSurveyExceptions_DisplayedSubcomponentName" />
        <TransitionTo action="CalculateSurveyExceptions" />
      </Action>
      <Action actionType="LOGIC" name="CalculateSurveyExceptions" call="ProcessContext::CardController.getSurveyExceptions">
        <Parameters>
          <Input name="currentSurveys" value="ProcessContext::MainBO.boJobManager.loCurrentSurveys" />
        </Parameters>
        <Return name="ProcessContext::SurveyExceptions" />
        <TransitionTo action="CardReportingSurveyExceptions_SetDataReady" />
      </Action>
      <Action actionType="LOGIC" name="CardReportingSurveyExceptions_SetDataReady" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardReportingSurveyExceptions_DataLoaded" />
      </Action>
      <Action name="CardReportingSurveyExceptions_showMaximizedReports" actionType="PROCESS" process="Reporting::CardExceptionsMaximizedProcess">
        <Parameters>
          <Input name="SurveyExceptions" value="ProcessContext::SurveyExceptions" />
        </Parameters>
        <TransitionTo action="ShowCockpit_Decision" />
      </Action>
      <!-- Card: Latest Picture -->
      <Action name="CapturePicture" actionType="PROCESS" process="Call::CapturePictureProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::CardLatestPicture_CapturePictureSucceeded" value="success" />
        </ReturnValues>
        <TransitionTo action="CapturePicture_Decision" />
      </Action>
      <Action name="SelectPicture" actionType="PROCESS" process="Call::CapturePictureProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="openGallery" value="1" type="Literal" />
        </Parameters>
        <ReturnValues>
          <Return name="ProcessContext::CardLatestPicture_CapturePictureSucceeded" value="success" />
        </ReturnValues>
        <TransitionTo action="CapturePicture_Decision" />
      </Action>
      <Action name="CapturePicture_Decision" actionType="DECISION" parameter="ProcessContext::CardLatestPicture_CapturePictureSucceeded">
        <Case value="1" action="Save_AssignDisplayedSubcomponentNameForPictures" />
        <Case value="0" action="ShowCockpit_Decision" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <Action actionType="LOGIC" name="Save_AssignDisplayedSubcomponentNameForPictures" call="Facade.startTransaction">
        <TransitionTo action="doSave_AssignDisplayedSubcomponentNameForPictures" />
      </Action>
      <Action actionType="LOGIC" name="doSave_AssignDisplayedSubcomponentNameForPictures" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="Save_AssignDisplayedSubcomponentNameForPictures_Commit" />
      </Action>
      <Action actionType="LOGIC" name="Save_AssignDisplayedSubcomponentNameForPictures_Commit" call="Facade.commitTransaction">
        <TransitionTo action="AssignDisplayedSubcomponentNameForPictures" />
      </Action>
      <Action actionType="LOGIC" name="AssignDisplayedSubcomponentNameForPictures" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::MainBO.loCallAttachments" />
          <Input name="type" value="Pictures" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardLatestPicture_DisplayedSubcomponentName" />
        <TransitionTo action="CardLatestPicture_GetLastAddedPicture" />
      </Action>
      <Action actionType="LOGIC" name="CardLatestPicture_GetLastAddedPicture" call="ProcessContext::MainBO.LoCallAttachments.getLatestLiAttachment">
        <Return name="ProcessContext::CardLatestPicture_LastAddedPicture" />
        <TransitionTo action="CardLatestPicture_SetLatestPictureAvailability" />
      </Action>
      <Action actionType="LOGIC" name="CardLatestPicture_SetLatestPictureAvailability" call="ProcessContext::CardController.setLatestPictureAvailability">
        <Parameters>
          <Input name="liLatestPicture" value="ProcessContext::CardLatestPicture_LastAddedPicture" />
        </Parameters>
        <TransitionTo action="CardLatestPicture_SetDataReady" />
      </Action>
      <Action actionType="LOGIC" name="CardLatestPicture_SetDataReady" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardLatestPicture_DataLoaded" />
      </Action>
      <Action name="CardLatestPicture_ShowMaximizedView" actionType="PROCESS" process="Call::CardPictureMaximizedProcess">
        <Parameters>
          <Input name="Call" value="ProcessContext::MainBO" />
        </Parameters>
        <TransitionTo action="Save_AssignDisplayedSubcomponentNameForPictures" />
      </Action>
      <!-- Card: Mobile Links  START-->
      <Action name="SetCardMobileLinks_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::cardMobileLinks_DataLoaded" />
        <TransitionTo action="CardMobileLinks_LoadData" />
      </Action>
      <Action actionType="LOGIC" name="CardMobileLinks_LoadData" call="ProcessContext::cardMobileLinks_List.getMobileLinkForCard">
        <Parameters>
          <Input name="cockpit" value="StoreCockpit" type="Literal" />
          <Input name="card" value="MobileLinks" type="Literal" />
        </Parameters>
        <TransitionTo action="CardMobileLinks_GetCardInformation" />
      </Action>
      <Action actionType="LOGIC" name="CardMobileLinks_GetCardInformation" call="ProcessContext::cardMobileLinks_List.getInfoForMobileLinkCard">
        <Return name="ProcessContext::cardMobileLinks_InformationText" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForMobileLinks" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForMobileLinks" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::cardMobileLinks_List" />
          <Input name="type" value="MobileLinks" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMobileLinks_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardMobileLinks_OpenApp" actionType="LOGIC" call="ProcessContext::cardMobileLinks_List.startMobileLinkTransition">
        <Parameters>
          <Input name="card" value="MobileLinks" type="Literal" />
          <Input name="schemeName" value="Event.schemeName" />
          <Input name="assetType" value="Event.assetType" />
          <Input name="assetId" value="Event.assetId" />
          <Input name="orgId" value="Event.orgId" />
          <Input name="loginHost" value="Event.loginHost" />
          <Input name="dashboardState" value="Event.dashboardState" />
          <Input name="accountNumber" value="ProcessContext::CustomerDetail.customerId" />
          <Input name="quickAccessURL" type="Literal" value=" " />
          <Input name="accountId" value="ProcessContext::CustomerDetail.pKey" />
        </Parameters>
        <TransitionTo action="SetCardMobileLinks_DataLoaded" />
      </Action>
      <!-- Card: Mobile Links  END-->
      <!-- Card: Quick Access  START-->
      <Action name="SetCardQuickAccess_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::cardQuickAccess_DataLoaded" />
        <TransitionTo action="CardQuickAccess_loadData" />
      </Action>
      <Action actionType="LOGIC" name="CardQuickAccess_loadData" call="ProcessContext::cardQuickAccess_List.getMobileLinkForCard">
        <Parameters>
          <Input name="cockpit" value="StoreCockpit" type="Literal" />
          <Input name="card" value="QuickAccess" type="Literal" />
        </Parameters>
        <TransitionTo action="CardQuickAccess_GetCardInformation" />
      </Action>
      <Action actionType="LOGIC" name="CardQuickAccess_GetCardInformation" call="ProcessContext::cardQuickAccess_List.getInfoForMobileLinkCard">
        <Return name="ProcessContext::cardQuickAccess_InformationText" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForQuickAccess" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForQuickAccess" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::cardQuickAccess_List" />
          <Input name="type" value="QuickAccess" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardQuickAccess_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardQuickAccess_OpenApp" actionType="LOGIC" call="ProcessContext::cardQuickAccess_List.startMobileLinkTransition">
        <Parameters>
          <Input name="card" value="QuickAccess" type="Literal" />
          <Input name="schemeName" value="Event.schemeName" />
          <Input name="assetType" value=" " type="Literal" />
          <Input name="assetId" value=" " type="Literal" />
          <Input name="orgId" value=" " type="Literal" />
          <Input name="loginHost" value=" " type="Literal" />
          <Input name="dashboardState" value=" " type="Literal" />
          <Input name="accountNumber" value="ProcessContext::CustomerDetail.customerId" />
          <Input name="quickAccessURL" value="Event.url" />
          <Input name="accountId" value="ProcessContext::CustomerDetail.pKey" />
        </Parameters>
      </Action>
      <!-- Card: Quick Access  END-->
      <!-- Card: Step 6 Followup Card Notes  -->
       <Action name="SetCardFollowUpNotes_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardFollowUpNotes_DataLoaded" />
        <TransitionTo action="FollowupNotesInitialized" />
      </Action>
      <Action name="FollowupNotesInitialized" actionType="DECISION" parameter="ProcessContext::MainBO.noteInitialized">
        <Case value="0" action="loadCallNotes" />
        <Case value="1" action="CardFollowupNotes_LoadNotes" />
        <CaseElse action="loadCallNotes" />
      </Action>
      <Action actionType="LOGIC" name="CardFollowupNotes_LoadNotes" call="ProcessContext::CardFollowUpNotes_List.getNotesForCard">
        <Parameters>
          <Input name="numberOfListItems" value= "ProcessContext::CardController.numberOfListItems" />
          <Input name="clbMainPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="loNotes" value="ProcessContext::MainBO.loNotes" />
          <Input name="callDate" value="ProcessContext::MainBO.DateFrom" />
        </Parameters>
        <Return name="ProcessContext::CardFollowUpNotes_List" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForFollowUpNotes" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForFollowUpNotes" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardFollowUpNotes_List" />
          <Input name="type" value="FollowUpNotes" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardFollowUpNotes_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardFollowUpNotes_LoadCurrentNote" actionType="LOGIC" call="ProcessContext::CardFollowUpNotes_List.getItemByPKey">
        <Parameters>
          <Input name="pKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::NoteDetail" />
        <TransitionTo action="CardNotes_LoadNoteDetailWizard" />
      </Action>
      <!-- Card: Notes  START-->
      <Action name="SetCardNotes_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardNotes_DataLoaded" />
        <TransitionTo action="NotesInitialized" />
      </Action>
      <Action name="NotesInitialized" actionType="DECISION" parameter="ProcessContext::MainBO.noteInitialized">
        <Case value="0" action="loadCallNotes" />
        <Case value="1" action="CardNotes_LoadNotes" />
        <CaseElse action="loadCallNotes" />
      </Action>
      <Action actionType="LOAD" name="loadCallNotes" type="LoCallNotes">
        <Parameters>
          <Input name="clbMainPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="bpaMainPKey" value="ProcessContext::MainBO.bpaMainPKey" />
          <Input name="dateFrom" value="ProcessContext::MainBO.dateFrom" />
          <Input name="timeFrom" value="ProcessContext::MainBO.timeFrom" />
          <Input name="responsiblePKey" value="ProcessContext::MainBO.responsiblePKey" />
          <Input name="responsibleName" value="ProcessContext::MainBO.luUser.name" />
        </Parameters>
        <TransitionTo action="beforeSetNotesInitialized" />
      </Action>
      <!-- Freeze BoCall to keep it clean (will not be set dirty by the setter in next step) -->
      <Action actionType="LOGIC" name="beforeSetNotesInitialized" call="ProcessContext::MainBO.setObjectStatusFrozen">
        <Parameters>
          <Input name="setFrozen" type="Literal" value="true" />
        </Parameters>
        <TransitionTo action="setNotesInitialized" />
      </Action>
      <Action actionType="LOGIC" name="setNotesInitialized" call="ProcessContext::MainBO.setNoteInitialized">
        <Parameters>
          <Input name="noteInitialized" type="Literal" value="1" />
        </Parameters>
        <TransitionTo action="afterSetNotesInitialized" />
      </Action>
      <!-- Un-Freeze BoCall -->
      <Action actionType="LOGIC" name="afterSetNotesInitialized" call="ProcessContext::MainBO.setObjectStatusFrozen">
        <Parameters>
          <Input name="setFrozen" type="Literal" value="false" />
        </Parameters>
        <TransitionTo action="CardNotes_LoadNotes" />
      </Action>
      <Action actionType="LOGIC" name="CardNotes_LoadNotes" call="ProcessContext::CardNotes_List.getNotesForCard">
        <Parameters>
          <Input name="numberOfListItems" value="ProcessContext::CardController.numberOfListItems" />
          <Input name="clbMainPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="loNotes" value="ProcessContext::MainBO.loNotes" />
          <Input name="callDate" value="ProcessContext::MainBO.DateFrom" />
        </Parameters>
        <Return name="ProcessContext::CardNotes_List" />
        <TransitionTo action="CardNotes_GetCardInformation" />
      </Action>
      <Action actionType="LOGIC" name="CardNotes_GetCardInformation" call="ProcessContext::CardNotes_List.getInfoForNotesCard">
        <Return name="ProcessContext::CardNotes_InformationText" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForNotes" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForNotes" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardNotes_List" />
          <Input name="type" value="Notes" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardNotes_DisplayedSubcomponentName" />
        <TransitionTo action="SetCardFollowUpNotes_DataLoaded" />
      </Action>
      <Action name="CardNotes_LoadCurrentNote" actionType="LOGIC" call="ProcessContext::CardNotes_List.getItemByPKey">
        <Parameters>
          <Input name="pKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::NoteDetail" />
        <TransitionTo action="CardNotes_LoadNoteDetailWizard" />
      </Action>
      <Action name="CardNotes_LoadNote" actionType="LOGIC" call="ProcessContext::CardNotes_List.getItemByPKey">
        <Parameters>
          <Input name="pKey" value="Event.pKey" />
        </Parameters>
        <Return name="ProcessContext::NoteDetail" />
        <TransitionTo action="CardNotes_LoadNoteDetailWizard" />
      </Action>
      <Action actionType="PROCESS" name="CardNotes_LoadNoteDetailWizard" process="Call::VisitNotesWizardProcess">
        <Parameters>
          <Input name="NoteDetail" value="ProcessContext::NoteDetail" />
          <Input name="clbMainPKey" value="ProcessContext::MainBO.pKey" />
          <Input name="isReadOnly" value="0" />
        </Parameters>
        <TransitionTo action="CardNotes_UpdateDecision" />
        <ReturnValues>
          <Return name="ProcessContext::NoteText" value="noteText" />
          <Return name="ProcessContext::RefreshNoteList" value="isCurrentNote" />
        </ReturnValues>
      </Action>
      <Action name="CardNotes_UpdateDecision" actionType="DECISION" parameter="ProcessContext::RefreshNoteList">
        <Case value="true" action="CardNotes_updateLonotes" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <Action actionType="LOGIC" name="CardNotes_updateLonotes" call="ProcessContext::MainBO.loNotes.updateVisitNoteText">
        <Parameters>
          <Input name="noteText" value="ProcessContext::NoteText" />
          <Input name="clbMainPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <TransitionTo action="Save_AfterVisitNote_Start" />
      </Action>
      <Action actionType="LOGIC" name="Save_AfterVisitNote_Start" call="Facade.startTransaction">
        <TransitionTo action="Save_AfterVisitNote_Save" />
      </Action>
      <Action actionType="LOGIC" name="Save_AfterVisitNote_Save" call="ProcessContext::MainBO.saveAsync">
        <TransitionTo action="Save_AfterVisitNote_Commit" />
      </Action>
      <Action actionType="LOGIC" name="Save_AfterVisitNote_Commit" call="Facade.commitTransaction">
        <TransitionTo action="SetCardNotes_DataLoaded" />
      </Action>
      <Action actionType="PROCESS" name="CardNotes_ShowNotes" process="Call::NotesTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
        </Parameters>
        <TransitionTo action="Save_AfterVisitNote_Start" />
      </Action>
      <!-- Card: Notes  END-->
      
      <!-- Card: Activity Performance  START-->
      <Action name="LoadAndSetPrerequisites_ActivityPerformance" actionType="LOGIC" call="ProcessContext::MainBO.boJobManager.loadAndSetPrerequisites">
        <Parameters>
          <Input name="loadType" type="Literal" value="ActivityPerformance" />
        </Parameters>
        <TransitionTo action="SetCardActivityPerformance_DataLoaded" />
      </Action>
      <Action name="SetCardActivityPerformance_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardActivityPerformance_DataLoaded" />
        <TransitionTo action="CardActivityPerformance_LoadData" />
      </Action>
      <Action actionType="LOGIC" name="CardActivityPerformance_LoadData" call="ProcessContext::CardActivityPerformance_List.calculateActivityPerformanceForCard">
        <Parameters>
          <Input name="boJobManager" value="ProcessContext::MainBO.boJobManager" />
          <Input name="loQuestions" value="ProcessContext::MainBO.boJobManager.loQuestions" />
        </Parameters>
        <TransitionTo action="CardActivityPerformanceInfo" />
      </Action>
      <Action actionType="LOGIC" name="CardActivityPerformanceInfo" call="ProcessContext::CardActivityPerformance_List.prepareActivityPerformanceCardInfo">
        <Return name="ProcessContext::ActivityPerformanceInfo" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForActivityPerformance" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForActivityPerformance" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardActivityPerformance_List" />
          <Input name="type" value="ActivityPerformance" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardActivityPerformance_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardActivityPerformance_ShowAllActivities" actionType="PROCESS" process="Call::ActivityPerformanceProcess">
        <Parameters>
          <Input name="ActivityPerformanceList" value="ProcessContext::ActivityPerformanceInfo.activityPerformanceList" />
        </Parameters>
      </Action>
      <!-- Card: Activity Performance  END-->
      <!-- Card: Account Receivables  START-->
      <Action name="SetCardAccountReceivables_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardAccountReceivables_DataLoaded" />
        <TransitionTo action="CardAccountReceivables_LoadData" />
      </Action>
      <Action actionType="LOGIC" name="CardAccountReceivables_LoadData" call="ProcessContext::CardAccountReceivables_List.calculateAccountReceivablesForCard">
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
        </Parameters>
        <TransitionTo action="CardAccountReceivablesInfo" />
      </Action>
      <Action actionType="LOGIC" name="CardAccountReceivablesInfo" call="ProcessContext::CardAccountReceivables_List.prepareAccountReceivablesCardInfo">
        <Return name="ProcessContext::AccountReceivablesInfo" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForAccountReceivables" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForAccountReceivables" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardAccountReceivables_List" />
          <Input name="type" value="AccountReceivables" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardAccountRecievables_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardAccountReceivables_ShowAllAccountReceivables" actionType="PROCESS" process="Call::AccountReceivablesProcess">
        <Parameters>
          <Input name="AccountReceivableList" value="ProcessContext::AccountReceivablesInfo.accountReceivablesList" />
        </Parameters>
      </Action>
      <!-- Card: Account Receivables END-->
      <!-- Card: Follow Up visits START-->
      <Action name="SetCardFollowUpVisits_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardFollowUpVisits_DataLoaded" />
        <TransitionTo action="CardFollowUpVisits_LoadData" />
      </Action>
      <Action actionType="LOGIC" name="CardFollowUpVisits_LoadData" call="ProcessContext::CardFollowUpVisits_List.getCallsForFollowUpCard">
        <Parameters>
          <Input name="callCustomer" value="ProcessContext::MainBO.bpaMainPKey" />
          <Input name="dateFrom" value="ProcessContext::MainBO.dateFrom" />
          <Input name="timeFrom" value="ProcessContext::MainBO.timeFrom" />
        </Parameters>
        <Return name="ProcessContext::FollowUpVisitsInfo" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForFollowUpVisits" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForFollowUpVisits" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardFollowUpVisits_List" />
          <Input name="type" value="FollowUpVisits" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardFollowUpVisits_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardFollowUpVisits_AddNewVisit" actionType="PROCESS" process="Call::CreateNewWizardProcess">
        <Parameters>
          <Input name="DateFrom" value="ProcessContext::MainBO.dateFrom" />
          <Input name="Mode" value="FollowUp" type="Literal" />
          <Input name="CustomerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
          <Input name="ResponsiblePKey" value="ProcessContext::CurrentUser" />
        </Parameters>
        <TransitionTo action="CreateNewCall_Decision" />
        <ReturnValues>
          <Return name="ProcessContext::CardFollowUpVisits_CallMetaPKey" value="callMetaPKey" />
          <Return name="ProcessContext::CardFollowUpVisits_CustomerPKey" value="customerPKey" />
          <Return name="ProcessContext::CardFollowUpVisits_DateFrom" value="dateFrom" />
          <Return name="ProcessContext::CardFollowUpVisits_TimeFrom" value="timeFrom" />
          <Return name="ProcessContext::CardFollowUpVisits_AllDay" value="allDay" />
          <Return name="ProcessContext::CardFollowUpVisits_ButtonPressed" value="buttonPressed" />
          <Return name="ProcessContext::CardFollowUpVisits_SubstitutedUsrPKey" value="substitutedUsrPKey" />
          <Return name="ProcessContext::CardFollowUpVisits_IsManagedCustomer" value="isManagedCustomer" />
        </ReturnValues>
      </Action>
      <Action name="CreateNewCall_Decision" actionType="DECISION" parameter="ProcessContext::CardFollowUpVisits_ButtonPressed">
        <Case value="createCall" action="CreateNewCallWithCustomer" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <Action name="CreateNewCallWithCustomer" actionType="PROCESS" process="Call::CreateNewCallProcess">
        <Parameters>
          <Input name="callMetaPKey" value="ProcessContext::CardFollowUpVisits_CallMetaPKey" />
          <Input name="customerPKey" value="ProcessContext::CardFollowUpVisits_CustomerPKey" />
          <Input name="dateFrom" value="ProcessContext::CardFollowUpVisits_DateFrom" />
          <Input name="timeFrom" value="ProcessContext::CardFollowUpVisits_TimeFrom" />
          <Input name="allDay" value="ProcessContext::CardFollowUpVisits_AllDay" />
          <Input name="substitutedUsrPKey" value="ProcessContext::CardFollowUpVisits_SubstitutedUsrPKey" />
          <Input name="responsiblePKey" value="ProcessContext::CurrentUser" />
          <Input name="isManagedCustomer" value="ProcessContext::CardFollowUpVisits_IsManagedCustomer" />
          <Input name="boSfReplicationCallbacks" value="ProcessContext::SfReplicationCallbacks" />
        </Parameters>
        <TransitionTo action="SetCardFollowUpVisits_DataLoaded" />
      </Action>
      <Action name="CardFollowUpVisits_GetContextMenu" actionType="LOAD" type="LoAgendaOverviewContextMenu">
        <Parameters>
          <Input name="pKey" value="Event.pKey" />
          <Input name="clbStatus" value="Event.clbStatus" />
          <Input name="deleteAllowed" value="Event.deleteAllowed" />
          <Input name="referenceUserPKey" value="ProcessContext::CurrentUser" />
          <Input name="responsiblePKey" value="Event.responsiblePKey" />
          <Input name="referenceDate" value="Event.dateFrom" />
          <Input name="bpaMainPKey" value="Event.bpaMainPKey" />
          <Input name="mode" value="FollowUp" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardFollowUpVisits_ContextMenuList" />
      </Action>
      <Action name="ContextMenu_CustomerOnDevice_Decision" actionType="DECISION" parameter="Event.customerOnDevice">
        <Case value="1" action="CardFollowUpVisits_ContextMenu_Result_Decision" />
        <CaseElse action="Message_CallDataNotOnDevice" />
        <CaseEmpty action="Message_CallDataNotOnDevice" />
      </Action>
      <Action name="CardFollowUpVisits_ContextMenu_Result_Decision" actionType="DECISION" parameter="Event.selected">
        <Case value="Delete" action="CardFollowUpVisits_DeleteVisit" />
        <Case value="Re-Schedule" action="CardFollowUpVisits_RescheduleVisit" />
        <Case value="Info" action="CardFollowUpVisits_VisitInfo" />
        <CaseElse action="ShowCockpit_Decision" />
      </Action>
      <Action name="CardFollowUpVisits_DeleteVisit" actionType="PROCESS" process="Call::ChangeStatusWizardProcess">
        <Parameters>
          <Input name="MainPKey" value="Event.pKey" />
          <Input name="targetClbStatus" value="Deleted" type="Literal" />
          <Input name="ResponsiblePKey" value="ProcessContext::CurrentUser" />
        </Parameters>
        <TransitionTo action="SetCardFollowUpVisits_DataLoaded" />
      </Action>
      <Action name="CardFollowUpVisits_RescheduleVisit" actionType="PROCESS" process="Call::RescheduleCallProcess">
        <Parameters>
          <Input name="MainPKey" value="Event.pKey" />
          <Input name="dateFrom" value="Event.dateFrom" />
          <Input name="timeFrom" value="Event.timeFrom" />
          <Input name="dateThru" value="Event.dateThru" />
          <Input name="timeThru" value="Event.timeThru" />
          <Input name="ResponsiblePKey" value="ProcessContext::CurrentUser" />
        </Parameters>
        <TransitionTo action="SetCardFollowUpVisits_DataLoaded" />
      </Action>
      <Action name="CardFollowUpVisits_VisitInfo" actionType="PROCESS" process="Call::InfoTabProcess">
        <Parameters>
          <Input name="CallPKey" value="Event.pKey" />
          <Input name="ResponsiblePKey" value="ProcessContext::CurrentUser" />
        </Parameters>
      </Action>
      <Action name="Message_CallDataNotOnDevice" actionType="CONFIRM" confirmType="Ok">
        <Message messageId="CasConfirmCallDataNotOnDevice" />
        <Cases>
          <Case value="Ok" action="SetCardFollowUpVisits_DataLoaded" />
        </Cases>
      </Action>
      <!-- Card: Follow up visits END-->
      <!-- Card Step 3 Store Check-->
      <Action name="SetCardMyStoreCheck_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyStoreCheck_DataLoaded" />
        <TransitionTo action="CardMyStoreCheck_LoadStoreCheckSurvey" />
      </Action>
      <Action name="CardMyStoreCheck_LoadStoreCheckSurvey" actionType="LOAD" type="LoMyPreviousStoreCheckSurvey">
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::CurrentCustomerPKey" />
          <Input name="CurrentCallPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::CardMyStoreCheckSurvey_List" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForMyStoreCheck" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForMyStoreCheck" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardMyStoreCheckSurvey_List" />
          <Input name="type" value="CardMyStoreCheck" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyStoreCheck_DisplayedSubcomponentName" />
      </Action>
      <Action actionType="PROCESS" name="MyOpenPreviousStoreCheckSurvey" process="Call::MyPreviousSurveyProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="callPKey" value="Event.visitId" />
          <Input name="mySurveyType" value="StoreCheck" />
        </Parameters>
      </Action>
      <Action name="MyStartStoreCheckSurveyProcess_Decision" actionType="DECISION" parameter="ProcessContext::IsVisitSurveyBtnEditable">
        <Case value="true" action="MyStartStoreCheckSurveyProcess" />
      </Action>
      <Action actionType="PROCESS" name="MyStartStoreCheckSurveyProcess" process="Call::QuestionTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="mySurveyType" value="StoreCheck" type="Literal" />
        </Parameters>
        <TransitionTo action="MyStartTransactionAfterSurvey" />
      </Action>
      <!-- Card Step 5 DVRP Distribution-->
      <Action name="SetCardMyDVRPDistribution_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPDistribution_DataLoaded" />
        <TransitionTo action="CardMyDVRPDistribution_LoadDistributionSurvey" />
      </Action>
      <Action name="CardMyDVRPDistribution_LoadDistributionSurvey" actionType="LOAD" type="LoMyPreviousDistributionSurvey">
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::CurrentCustomerPKey" />
          <Input name="CurrentCallPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPDistributionSurvey_List" />
        <TransitionTo action="CardMyDVRPDistribution_loadMobileLinks" />
      </Action>
      <Action actionType="LOGIC" name="CardMyDVRPDistribution_loadMobileLinks" call="ProcessContext::cardMyDVRPDistributionReport_List.getMobileLinkForCard">
        <Parameters>
          <Input name="cockpit" value="StoreCockpit" type="Literal" />
          <Input name="card" value="MyDVRPDistribution" type="Literal" />
        </Parameters>
        <TransitionTo action="AssignDisplayedSubcomponentNameForMyDVRPDistribution" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForMyDVRPDistribution" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardMyDVRPDistributionSurvey_List" />
          <Input name="type" value="CardMyDVRPDistribution" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPDistribution_DisplayedSubcomponentName" />
      </Action>
      <Action name="CardMyMobileLinks_OpenApp" actionType="LOGIC" call="ProcessContext::cardMobileLinks_List.startMobileLinkTransition">
        <Parameters>
          <Input name="card" value="MyDVRPDistribution" type="Literal" />
          <Input name="schemeName" value="ProcessContext::cardMyDVRPDistributionReport_List.current.schemeName" />
          <Input name="assetType" value="ProcessContext::cardMyDVRPDistributionReport_List.current.assetType" />
          <Input name="assetId" value="ProcessContext::cardMyDVRPDistributionReport_List.current.assetId" />
          <Input name="orgId" value="ProcessContext::cardMyDVRPDistributionReport_List.current.orgId" />
          <Input name="loginHost" value="ProcessContext::cardMyDVRPDistributionReport_List.current.loginHost" />
          <Input name="dashboardState" value="ProcessContext::cardMyDVRPDistributionReport_List.current.dashboardState" />
          <Input name="accountNumber" value="ProcessContext::CustomerDetail.customerId" />
          <Input name="quickAccessURL" type="Literal" value=" " />
          <Input name="accountId" value="ProcessContext::CustomerDetail.pKey" />
        </Parameters>
        <TransitionTo action="SetCardMobileLinks_DataLoaded" />
      </Action>
      <Action actionType="PROCESS" name="MyOpenPreviousDistributionSurvey" process="Call::MyPreviousSurveyProcess">
        <Parameters>
          <Input name="callPKey" value="Event.visitId" />
          <Input name="mySurveyType" value="Distribution" />
        </Parameters>
      </Action>
      <Action name="MyStartDistributionSurveyProcess_Decision" actionType="DECISION" parameter="ProcessContext::IsVisitSurveyBtnEditable">
        <Case value="true" action="MyStartDistributionSurveyProcess" />
      </Action>
      <Action actionType="PROCESS" name="MyStartDistributionSurveyProcess" process="Call::SurveyTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="mySurveyType" value="Distribution" type="Literal" />
        </Parameters>
        <TransitionTo action="MyStartTransactionAfterSurvey" />
      </Action>
      <!-- Card Step 5 DVRP Visibility-->
      <Action name="SetCardMyDVRPVisibility_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPVisibility_DataLoaded" />
        <TransitionTo action="CardMyDVRPVisibility_LoadVisibilitySurvey" />
      </Action>
      <Action name="CardMyDVRPVisibility_LoadVisibilitySurvey" actionType="LOAD" type="LoMyPreviousVisibilitySurvey">
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::CurrentCustomerPKey" />
          <Input name="CurrentCallPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPVisibilitySurvey_List" />
      </Action>
      <Action actionType="PROCESS" name="MyOpenPreviousVisibilitySurvey" process="Call::MyPreviousSurveyProcess">
        <Parameters>
          <Input name="callPKey" value="Event.visitId" />
          <Input name="mySurveyType" value="Visibility" />
        </Parameters>
      </Action>
      <Action name="MyStartVisibilitySurveyProcess_Decision" actionType="DECISION" parameter="ProcessContext::IsVisitSurveyBtnEditable">
        <Case value="true" action="MyStartVisibilitySurveyProcess" />
      </Action>
      <Action actionType="PROCESS" name="MyStartVisibilitySurveyProcess" process="Call::SurveyTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="mySurveyType" value="Visibility" type="Literal" />
        </Parameters>
        <TransitionTo action="MyStartTransactionAfterSurvey" />
      </Action>
      <!-- Card Step 5 DVRP Promotion-->
      <Action name="SetCardMyDVRPPromotion_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPPromotion_DataLoaded" />
      </Action>
      <Action name="MyStartPromotionSurveyProcess_Decision" actionType="DECISION" parameter="ProcessContext::IsVisitSurveyBtnEditable">
        <Case value="true" action="StartMyPromotionTabProcess" />
      </Action>
      <Action name="StartMyPromotionTabProcess" actionType="PROCESS" process="Call::MyPromotionTabProcess"> 
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="mySurveyType" value="Promotions" type="Literal" />
        </Parameters>
        <TransitionTo action="Save_LoadAndSetPrerequisites_ForExcceptions" />
      </Action>
      <!-- Card Step 5 DVRP Trainings-->
      <Action name="SetCardMyDVRPTrainings_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPTrainings_DataLoaded" />
        <TransitionTo action="CardMyDVRPTrainings_LoadTrainingSurvey" />
      </Action>
      <Action name="CardMyDVRPTrainings_LoadTrainingSurvey" actionType="LOAD" type="LoMyPreviousTrainingSurvey">
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::CurrentCustomerPKey" />
          <Input name="CurrentCallPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPTrainingSurvey_List" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForMyDVRPTrainings" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForMyDVRPTrainings" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardMyDVRPTrainingSurvey_List" />
          <Input name="type" value="MyDVRPTrainings" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMyDVRPTrainings_DisplayedSubcomponentName" />
      </Action>
      <Action name="MyStartTrainingSurveyProcess_Decision" actionType="DECISION" parameter="ProcessContext::IsVisitSurveyBtnEditable">
        <Case value="true" action="StartMyTrainingTabProcess" />
      </Action>
      <Action name="StartMyTrainingTabProcess" actionType="PROCESS" process="Call::MyTrainingTabProcess"> 
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="mySurveyType" value="Trainings" type="Literal" />
        </Parameters>
        <TransitionTo action="Save_LoadAndSetPrerequisites_ForExcceptions" />
      </Action>
      <Action actionType="PROCESS" name="MyOpenPreviousTrainingSurvey" process="Call::MyPreviousSurveyProcess">
        <Parameters>
          <Input name="callPKey" value="Event.visitId" />
          <Input name="mySurveyType" value="Training" />
        </Parameters>
      </Action>
      <Action name="OpenSalesFolderLookupByCustomer" actionType="PROCESS" process="Order::MySalesFolderLookupProcess">
        <Parameters>
          <Input name="Category" value="Training" type="Literal" />
          <Input name="IsInternal" value="0" type="Literal" />
          <Input name="CustomerPKey" value="ProcessContext::CurrentCustomerPKey" type="DomPKey" />
        </Parameters>
      </Action>

      <!-- Card Step 5 MyDVRPTrainings  END-->
      

      <!-- Card: Step 6 Schedule meeting START -->
      <Action name="CardScheduleMeeting_DataLoad" actionType="LOGIC" call="Utils.identity">
        <TransitionTo action="AssignDisplayedSubcomponentNameForCardScheduleMeeting" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForCardScheduleMeeting" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" type="Literal" /><!-- No items-->
          <Input name="type" value="CardScheduleMeeting" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardScheduleMeeting_DisplayedSubcomponentName" />
        <TransitionTo action="MyCardScheduleMeeting_DataLoaded" />
      </Action>
      <Action name="MyCardScheduleMeeting_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::MyCardScheduleMeeting_DataLoaded" />
      </Action>
      <Action name="CardScheduleMeeting_OpenAgenda" actionType="PROCESS" process="Call::AgendaProcess">
        <Parameters>
          <Input name="cardDate" value="ProcessContext::CardDate" />
          <Input name="mySelectedCustomerPKey" value="ProcessContext::customerPKey" />
          <Input name="AgendaView" value="Week" type="Literal" />
        </Parameters>
        <TransitionTo action="ShowCockpit_Decision" />
      </Action> 
      <!-- Card: Step 6 Schedule meeting END -->
      <!-- Card: Step 6 Perfomance survey START -->
      <Action name="SetMyCardSatisfactionSurvey_DataLoaded" actionType="LOGIC" call="Utils.identity">
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::MyCardSatisfactionSurvey_DataLoaded" />
        <TransitionTo action="CardMySatisfaction_LoadSatisfactionSurvey" />
      </Action>
      <!-- To be completed -->
      <Action actionType="LOAD" name="CardMySatisfaction_LoadSatisfactionSurvey" type="LoMyPreviousSatisfactionSurvey">
        <!-- Read last performance survey from user -->
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::CurrentCustomerPKey" />
          <Input name="CurrentCallPKey" value="ProcessContext::MainBO.pKey" />
        </Parameters>
        <Return name="ProcessContext::CardMySatisfactionSurvey_List" />
        <TransitionTo action="AssignDisplayedSubcomponentNameForMySatisfaction" />
      </Action>
      <Action name="AssignDisplayedSubcomponentNameForMySatisfaction" actionType="LOGIC" call="ProcessContext::CardController.getDisplayedSubcomponentName">
        <Parameters>
          <Input name="loItems" value="ProcessContext::CardMySatisfactionSurvey_List" />
          <Input name="type" value="CardMySatisfaction" type="Literal" />
        </Parameters>
        <Return name="ProcessContext::CardMySatisfaction_DisplayedSubcomponentName" />
      </Action>
      <Action name="MyStartSatisfactionSurveyProcess_Decision" actionType="DECISION" parameter="ProcessContext::IsVisitSurveyBtnEditable">
        <Case value="true" action="MyStartSatisfactionSurvey" />
      </Action>
      <Action name="MyStartSatisfactionSurvey" actionType="PROCESS" process="Call::QuestionTabProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="mySurveyType" value="Satisfaction" type="Literal" />
        </Parameters>
        <TransitionTo action="MyStartTransactionAfterSurvey" />
      </Action>
      <Action actionType="PROCESS" name="MyOpenPreviousSatisfactionSurvey" process="Call::MyPreviousSurveyProcess">
        <Parameters>
          <Input name="MainBO" value="ProcessContext::MainBO" />
          <Input name="callPKey" value="Event.visitId" />
          <Input name="mySurveyType" value="Satisfaction" />
        </Parameters>
      </Action>
      <!-- Card: Step 6 Perfomance survey END -->
      <!-- Card: Sales folder START -->
      <Action actionType="LOAD" name="CardMySalesFolder_DataLoad" type="LoSalesFolderCallCustomer">
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
          <Input name="fromCockpit" value="1" />
          <Input name="callDate" value="ProcessContext::MainBO.DateFrom" />
          <Input name="callDateThru" value="ProcessContext::MainBO.DateThru" />
        </Parameters>
        <Return name="ProcessContext::CardMySalesFolder_List" />
        <TransitionTo action="CardMySalesFolder_LimitItems" />
      </Action>
      <Action actionType="LOGIC" name="CardMySalesFolder_LimitItems" call="ProcessContext::CardMySalesFolder_List.myLimitItems">
        <TransitionTo action="SetCardMySalesFolder__DataLoaded" />
      </Action>
      <Action actionType="LOGIC" name="SetCardMySalesFolder__DataLoaded" call="Utils.identity">
        <Return name="ProcessContext::CardMySalesFolder_DataLoaded" />
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
      </Action>
      <Action name="MyLoadPromotions" actionType="PROCESS" process="SalesFolder::SalesFolderPromotionProcess">
        <Parameters>
          <Input name="MainPKey" value="Event.pKey" />
          <Input name="SloganText" value="Event.sloganText" />
          <Input name="CustomerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
        </Parameters>
      </Action>
      <Action name="MyOpenAllSalesFolders" actionType="PROCESS" process="SalesFolder::SalesFolderOverviewProcess">
        <Parameters>
          <Input name="CurrentCustomerPKey" value="ProcessContext::MainBO.BpaMainPKey" />
          <Input name="CallDate" value="ProcessContext::MainBO.DateFrom" />
          <Input name="NavigationMode" type="Literal" value="CustomerSalesFolder" />
          <Input name="CallDateThru" value="ProcessContext::MainBO.DateThru" />
        </Parameters>
      </Action>
      <!-- Card: Sales folder END -->
      <!-- Card: Sales Agreement START -->
      <Action actionType="LOAD" name="CardMySalesAgreement_DataLoad" type="LoMySalesAgreements">
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
        </Parameters>
        <Return name="ProcessContext::LoMySalesAgreements" />
        <TransitionTo action="SetCardMySalesAgreement_DataLoaded" />
      </Action>
      <Action actionType="LOGIC" name="SetCardMySalesAgreement_DataLoaded" call="Utils.identity">
        <Return name="ProcessContext::CardMySalesAgreement_DataLoaded" />
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
      </Action>
      <Action actionType="LOAD" name="MyLoadSalesAgreement" type="BoMySalesAgreement">
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
          <Input name="agreementPKey" value="Event.pKey" />
        </Parameters>
        <Return name="ProcessContext::BoMySalesAgreement" />
        <TransitionTo action="MyOpenSalesAgreement" />
      </Action>
      <Action name="MyOpenSalesAgreement" actionType="PROCESS" process="Call::MyShowAttachmentProcess">
        <Parameters>
          <!-- As MediaControl only supports images and videos, we have to use MediaListControl, so we send the full attachment list,
          regardless of the element pressed
          -->
          <Input name="AttachmentList" value="ProcessContext::BoMySalesAgreement.loAttachment"/>
        </Parameters>
      </Action>
      <!-- Card: Sales Agreement END --> 
      
      <!-- Card: My Promotions START -->
      <Action name="StartMyPromotionAccountProcess" actionType="PROCESS" process="Call::MyPromotionCompensationsProcess">
        <Parameters>
          <Input name="currentCustomerPKey" value="ProcessContext::CurrentCustomerPKey" />
        </Parameters>
      </Action>
      
      <!-- Card: My Promotions END -->
      
      <!-- Card: Step 2 - Preparation - My KPIs -->
      <Action actionType="LOAD" name="MyLoadMyCRMAKPILinks" type="LoSysMobileLink">
      <Parameters>
          <Input name="displayTile" type="Literal" value="Account KPI" />
          <Input name="displayIn" type="Literal" value="Store Cockpit" />
          <Input name="recordTypeName" type="Literal" value="Custom_Links" />
        </Parameters>
        <Return name="ProcessContext::MyCRMAKPIlinks_List" />
        <TransitionTo action="SetMyCardCRMALinks_DataLoaded" />
      </Action>
      <Action actionType="LOGIC" name="SetMyCardCRMALinks_DataLoaded" call="Utils.identity">
        <Return name="ProcessContext::CardMyCRMAKPIs_DataLoaded" />
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
      </Action>
      <Action actionType="LOGIC" name="MyOpenCRMADashboard" call="ProcessContext::MyCRMAKPIlinks_List.myStartMobileLinkTransition">
        <Parameters>
          <Input name="schemeName" value="Event.schemeName" />
          <Input name="url" value="Event.url" />
        </Parameters>
      </Action>

      <!-- Card: Step 2 - Preparation - OrdersOverview -->
      <Action actionType="LOAD" name="MyLoadOrdersOverview" type="LoMyOrderStatusCustomer">
        <Parameters>
          <Input name="customerPKey" value="ProcessContext::MainBO.bpaMainPKey" />
        </Parameters>
        <Return name="ProcessContext::CardMyOrdersOverview_List" />
        <TransitionTo action="SetMyOrdersOverview_DataLoaded" />
      </Action>
      <Action actionType="LOGIC" name="SetMyOrdersOverview_DataLoaded" call="Utils.identity">
        <Return name="ProcessContext::CardMyOrdersOverview_DataLoaded" />
        <Parameters>
          <Input name="value" value="1" type="Literal" />
        </Parameters>
      </Action>
      <Action name="CardMyOrdersOverview_OpenAllOrders" actionType="PROCESS" process="Order::OverviewProcess" />

      <!--End Action Decision-->
      <Action name="EndDecision" actionType="DECISION" parameter="ProcessContext::Completed">
        <Case value="1" action="End" />
        <CaseElse action="ValidateBeforeExit" />
      </Action>
      <Action name="ValidateBeforeExit" actionType="VALIDATION">
        <Validations>
          <Validation name="ProcessContext::MainBO.doValidateAsync" />
        </Validations>
        <TransitionTo action="ValidateBeforeExit_Decision" />
      </Action>
      <Action name="ValidateBeforeExit_Decision" actionType="DECISION" parameter="ProcessContext::validationResult">
        <Case value="validateOk" action="Save_Only" />
        <Case value="validateBack" action="StartCompleteProcess" />
        <CaseElse action="End" />
      </Action>
    </Actions>
  </Body>
</Process>
