<DataSource name="DsLuMySalesOrgAttachment" backendSystem="sf" objectClass="LuMySalesOrgAttachment" external="true" editableEntity="SF_File" readOnly="true" schemaVersion="2.0" >
<Attributes>
  <Attribute name="pKey" table="SF_FileLink" column="Id" />
  <Attribute name="prdMainPKey" table="SF_FileLink" column="ParentId" />
  <Attribute name="fileName" table="SF_File" column="PathOnClient" />
  <DerivedAttribute name="fileType" value="replace(SF_File.PathOnClient, rtrim(SF_File.PathOnClient, replace(SF_File.PathOnClient, '.', '')), '')" />
  <!-- Derived attribute required as FW accesses the type property -->
  <DerivedAttribute name="type" value="replace(SF_File.PathOnClient, rtrim(SF_File.PathOnClient, replace(SF_File.PathOnClient, '.', '')), '')" />
  <Attribute name="description" table="SF_File" column="Description" />
  <Attribute name="mediaPath" table="SF_File" column="VersionData" />
  <Attribute name="usage" table="SF_File" column="Usage__c" />
</Attributes>
<Entities>
  <Entity name="SF_File" alias="" idAttribute="Id" />
</Entities>
<Database platform="SQLite">
  <Load><![CDATA[
    var pKey = "";
    var filetitle = "";
    var usage = "";
    var skipFileTitleFilter = "";
    if(Utils.isDefined(jsonQuery)){
      var newParams = jsonQuery;
      if (Utils.isOldParamsFormat(newParams)){
      newParams = Utils.convertDsParamsOldToNew(newParams);
      }
    }
    var addCondSearch = "";
    /**  pKey  **/
    if (Utils.isDefined(newParams.pKey)){
      pKey = Utils.convertForDBParam(newParams.pKey, "DomText");
      addCondSearch += " AND SF_FileLink.ParentId = "  + "#pKey# ";
    }
    if (Utils.isDefined(newParams.filetitle)){
      filetitle = Utils.convertForDBParam(newParams.filetitle, "DomText");
      skipFileTitleFilter = Utils.convertForDBParam(newParams.skipFileTitleFilter, "DomText");
      if(skipFileTitleFilter !='1')
      addCondSearch += " AND SF_File.Title = " + "#filetitle# ";
    }
    if (Utils.isDefined(newParams.usage)){
      usage = Utils.convertForDBParam(newParams.usage, "DomText");
      addCondSearch += " AND SF_File.Usage__c = " +  "#usage# ";
    }
    var sqlParams = {pKey,filetitle,usage};
    
  

    var sql = "SELECT ";
    sql += "SF_FileLink.Id AS pKey, ";
    sql += "SF_FileLink.ParentId AS prdMainPKey, ";
    sql += "SF_File.PathOnClient AS fileName, ";
    sql += "REPLACE(SF_File.PathOnClient, RTRIM(SF_File.PathOnClient, REPLACE(SF_File.PathOnClient, '.', '')), '') AS fileType, ";
    sql += "REPLACE(SF_File.PathOnClient, RTRIM(SF_File.PathOnClient, REPLACE(SF_File.PathOnClient, '.', '')), '') AS type, ";
    sql += "SF_File.Description AS description, ";
    sql += "SF_File.VersionData AS mediaPath, ";
    sql += "SF_File.Usage__c AS usage ";
    sql += "FROM SF_File ";
    sql += "INNER JOIN SF_FileLink ON SF_File.Id = SF_FileLink.FileId ";
    sql += "WHERE (1=1) "
    sql += addCondSearch;
    sql += "ORDER BY SF_File.CreatedDate DESC";
    return Utils.replaceMacrosParam(sql, sqlParams);
]]></Load>
</Database>
</DataSource>