<DataSource name="DsLoMyThirdKpiData" backendSystem="sf" businessObjectClass="LoMyThirdKpiData" external="true" editableEntity="order_item__c" schemaVersion="2.0">
  <!-- For more information about the supported properties and nodes see corresponding DataSource.md file under ~Workspace/contractSnippets/YourModuel Section/DS/DS_DataSource -->
 <Entities>
    <Entity name="order_item__c" alias="" idAttribute="Id" />
 </Entities>
 <Database platform="SQLite">
    <Load><![CDATA[  

    	var salesOrg = "";
      var user = "";
      var date = "";

      if(Utils.isDefined(jsonQuery.salesOrg)){
				salesOrg = Utils.convertForDBParam(jsonQuery.salesOrg, "DomString");
			}
      if(Utils.isDefined(jsonQuery.user)){
				user = Utils.convertForDBParam(jsonQuery.user, "DomPKey");
			}
      if(Utils.isDefined(jsonQuery.date)){
        date = Utils.convertForDBParam(jsonQuery.date, "DomDate");
      } 

			var sqlParams = {salesOrg, user, date};

			var sqlStmt = "";
      if(salesOrg == "C172"){ // C172 - France - Distribution (Cycle)

      sqlStmt += " SELECT OrderCount as value, brandName, CASE WHEN Targets.Target IS NULL THEN 0 ELSE Targets.Target END as target from ( ";
      sqlStmt += "      SELECT ";
      sqlStmt += "          Brand.Name as brandName ";
      sqlStmt += "          ,count(distinct ODR.Order_Account__c) as OrderCount ";
      sqlStmt += "          ,Brand.Id as BrandId ";
      sqlStmt += "      FROM ";
      sqlStmt += "          order_item__c ODRI ";
      sqlStmt += "          inner join order__c ODR on ODRI.order__c = ODR.Id and Phase__c = 'Activated'";
      sqlStmt += "          inner join RecordType RT on ODR.RecordTypeId = RT.Id and RT.Name = 'Split' ";
      sqlStmt += "          inner join Sales_Organization__c SO on SO.Name = #salesOrg# ";
      sqlStmt += "          inner join Cycle__c CC on CC.SalesOrganization__c = SO.ID ";
      sqlStmt += "          inner join Product2 P2 on ODRI.Product__c = P2.Id ";
      sqlStmt += "          inner join Product2 Brand on P2.Criterion_3_Product__c = Brand.Id ";
      sqlStmt += "          Where ODR.Order_Date__c >= CC.StartDate__c and ODR.Order_Date__c <= CC.EndDate__c ";
      sqlStmt += "      GROUP BY Brand.Name ";
      sqlStmt += "          LIMIT 3 ";
      sqlStmt += "  )  left join ( ";
      sqlStmt += "      SELECT distinct TB.Brand__c as Brand, CC.Id as CycleId, UT.Target_Value__c as Target ";
      sqlStmt += "      FROM ";
      sqlStmt += "          Sales_Organization__c SO ";
      sqlStmt += "          inner join Cycle__c CC on CC.SalesOrganization__c = SO.ID and SO.Name = #salesOrg# ";
      sqlStmt += "          inner join TopBrand__c TB on TB.CycleName__c = CC.ID ";
      sqlStmt += "          inner join Product2 P2 on TB.Brand__c = P2.Id " ;
      sqlStmt += "          inner join User_target__c UT on TB.Brand__c = UT.Product__c " ;
      sqlStmt += "          and UT.Cycle__c = CC.Id and Dimension__c = 'Distribution' and Target_Metric__c = 'Count' and Period_Type__c = 'Cycle' and Order_Scope__c = 'Full' and Order_Scope__c = 'Full' ";
      sqlStmt += "          WHERE #compareAsDate('CC.StartDate__c', 'Date','<=' ,#date#, 'Date')# "
      sqlStmt += "          AND #compareAsDate('CC.EndDate__c', 'Date','>=' ,#date#, 'Date')# ";
      sqlStmt += "  ) Targets on Targets.Brand = BrandId ";
    }
    else { // Other Countries - Campaign Net Sales (Month)

      sqlStmt += " SELECT Quantity * NetValue as value, BrandProduct.Name as brandName, CASE WHEN Targets.Target IS NULL THEN 0 ELSE Targets.Target END as target from ( ";
      sqlStmt += "      SELECT ";
      sqlStmt += "          SUM(ActualDeliveryQty__c) Quantity ";
      sqlStmt += "          ,SUM(GrossUnitPrice__c) NetValue ";
      sqlStmt += "          ,DY.DeliveryDate__c ";
      sqlStmt += "          ,DLI.Material__c ";
      sqlStmt += "          ,P2.Criterion_3_Product__c as Brand ";
      sqlStmt += "      FROM ";
      sqlStmt += "          DeliveryLineItem__c DLI ";
      sqlStmt += "          inner join Order_Item__c ORI on DLI.OrderLineItem__c = ORI.Id ";
      sqlStmt += "          inner join Order__c ODR on ORI.Order__c = ODR.Id ";
      sqlStmt += "          inner join PricingTerm__c PT on ODR.PreSalesId__c = PT.ID and PT.OrderType__c = 'Campaign' ";
      sqlStmt += "          inner join Delivery__c DY on DY.Id = DLI.Delivery__c ";
      sqlStmt += "          inner join Sales_Organization__c SO on SO.Name = #salesOrg# ";
      sqlStmt += "          inner join Cycle__c CC on CC.SalesOrganization__c = SO.ID ";
      sqlStmt += "          inner join product2 P2 on DLI.Material__c = P2.Id ";
      sqlStmt += "          WHERE #compareAsDate('DY.DeliveryDate__c', 'Date','>=' ,'CC.StartDate__c', 'Date')# ";
      sqlStmt += "          AND #compareAsDate('DY.DeliveryDate__c', 'Date','<=' ,'CC.EndDate__c', 'Date')# ";
      sqlStmt += "      GROUP BY ";
      sqlStmt += "          Brand ";
      sqlStmt += "          LIMIT 3 ";
      sqlStmt += "  )   inner join product2 BrandProduct on Brand = BrandProduct.Id   ";
      sqlStmt += "  left join ( ";
      sqlStmt += "      SELECT distinct TB.Brand__c, CC.Id as CycleId, UT.Target_Value__c as Target ";
      sqlStmt += "      FROM ";
      sqlStmt += "          Sales_Organization__c SO ";
      sqlStmt += "          inner join Cycle__c CC on CC.SalesOrganization__c = SO.ID ";
      sqlStmt += "          inner join TopBrand__c TB on TB.CycleName__c = CC.ID ";
      sqlStmt += "          inner join User_target__c UT on TB.Brand__c = UT.Product__c and UT.Cycle__c = CC.Id ";
      sqlStmt += "          and Dimension__c = 'Sell-In (Net Sales)' and Target_Metric__c = 'Amount' and Period_Type__c = 'Cycle' and Order_Scope__c = 'Campaign' ";
      sqlStmt += "          WHERE #compareAsDate('CC.StartDate__c', 'Date','<=' ,#date#, 'Date')# "
      sqlStmt += "          AND #compareAsDate('CC.EndDate__c', 'Date','>=' ,#date#, 'Date')# ";
      sqlStmt += "  ) Targets on Targets.Brand__c = Brand ";
    }

			return Utils.replaceMacrosParam(sqlStmt, sqlParams);
		]]></Load>
    <Update><![CDATA[ 
			// Intended to be empty     
			return undefined;     
		]]></Update>
 </Database>
</DataSource>